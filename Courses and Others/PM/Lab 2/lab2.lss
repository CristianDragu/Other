
lab2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  0000185e  000018f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000185e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800116  00800116  00001908  2**0
                  ALLOC
SYMBOL TABLE:
00800100 l    d  .data	00000000 .data
00000000 l    d  .text	00000000 .text
00800116 l    d  .bss	00000000 .bss
00000000 l    df *ABS*	00000000 lab2.c
0000003f l       *ABS*	00000000 __SREG__
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
00000034 l       *ABS*	00000000 __CCP__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
00800109 l     O .data	0000000c LCD_generate_bars()::C.0
00000000 l    df *ABS*	00000000 lcd.c
0000003f l       *ABS*	00000000 __SREG__
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
00000034 l       *ABS*	00000000 __CCP__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
00000000 l    df *ABS*	00000000 usart.c
0000003f l       *ABS*	00000000 __SREG__
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
00000034 l       *ABS*	00000000 __CCP__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
000017d2 l       .text	00000000 __udivmodsi4_ep
000017b8 l       .text	00000000 __udivmodsi4_loop
0000185c l       .text	00000000 __stop_program
00000098 l       .text	00000000 .do_copy_data_start
00000094 l       .text	00000000 .do_copy_data_loop
000000a8 l       .text	00000000 .do_clear_bss_start
000000a6 l       .text	00000000 .do_clear_bss_loop
0000003f l       *ABS*	00000000 __SREG__
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
00000034 l       *ABS*	00000000 __CCP__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
0000003f l       *ABS*	00000000 __SREG__
0000003e l       *ABS*	00000000 __SP_H__
0000003d l       *ABS*	00000000 __SP_L__
00000034 l       *ABS*	00000000 __CCP__
00000000 l       *ABS*	00000000 __tmp_reg__
00000001 l       *ABS*	00000000 __zero_reg__
000000b6  w      .text	00000000 __vector_22
00000278  w    F .text	00000350 drawProgressBars(unsigned long, unsigned long, unsigned int)
000000b6  w      .text	00000000 __vector_28
000000b6  w      .text	00000000 __vector_1
00000c72 g     F .text	000000ee LCD_readData()
0000007c g       .text	00000000 __trampolines_start
0000185e g       .text	00000000 _etext
000000b6  w      .text	00000000 __vector_24
000000e6 g     F .text	00000024 __vector_12
000000b6 g       .text	00000000 __bad_interrupt
00800116  w    O .bss	00000004 drawProgressBars(unsigned long, unsigned long, unsigned int)::progress_line2_old
00000b34 g     F .text	00000050 LCD_waitNotBusy()
00001874 g       *ABS*	00000000 __data_load_end
00000eac g     F .text	000000f8 LCD_writeInstr(unsigned char)
000017f0 g     F .text	0000006a puts
000000b6  w      .text	00000000 __vector_6
0080011e g     O .bss	0000000e printf_init()::mystdout
0000007c g       .text	00000000 __trampolines_end
000000b6  w      .text	00000000 __vector_3
000000b6  w      .text	00000000 __vector_23
0000185e g       *ABS*	00000000 __data_load_start
0000007c g       .text	00000000 __dtors_end
00800132 g       .bss	00000000 __bss_end
000000b6  w      .text	00000000 __vector_30
000000b6  w      .text	00000000 __vector_25
00001706 g     F .text	00000018 USART0_init()
000000b6  w      .text	00000000 __vector_11
0000007c  w      .text	00000000 __init
000000ba g     F .text	00000016 __vector_13
000000b6  w      .text	00000000 __vector_17
000000b6  w      .text	00000000 __vector_19
00000fa4 g     F .text	0000010a LCD_print(char const*)
000000b6  w      .text	00000000 __vector_7
00000e58 g     F .text	00000054 LCD_isBusy()
0000009e g       .text	00000000 __do_clear_bss
00810000 g       .bss	00000000 __eeprom_end
00000000 g       .text	00000000 __vectors
000000b6  w      .text	00000000 __vector_27
00800116 g       .data	00000000 __data_end
0000176e g       .text	00000000 __mulsi3
00000000  w      .text	00000000 __vector_default
0000010a g     F .text	0000006e __vector_5
00000d60 g     F .text	000000f8 LCD_writeData(unsigned char)
0080011a  w    O .bss	00000004 drawProgressBars(unsigned long, unsigned long, unsigned int)::progress_line1_old
0000018a g     F .text	00000026 timer1_init()
0000007c g       .text	00000000 __ctors_start
0000171e g     F .text	00000010 USART0_transmit(char)
00000088 g       .text	00000000 __do_copy_data
00800116 g       .bss	00000000 __bss_start
0000173c g     F .text	0000001e USART0_print(char const*)
000005c8 g     F .text	000003e6 main
000000b6  w      .text	00000000 __vector_4
000010ae g     F .text	000000f8 LCD_putChar(char)
0000172e g     F .text	0000000e USART0_receive()
00000000  w      *ABS*	00000000 __heap_end
0000175a g     F .text	00000014 USART0_printf(char, __file*)
000000b6  w      .text	00000000 __vector_9
000011a6 g     F .text	000001ee LCD_putCharAt(unsigned char, char)
000000b6  w      .text	00000000 __vector_2
00001394 g     F .text	00000156 LCD_printAt(unsigned char, char const*)
000000b6  w      .text	00000000 __vector_21
000000d0 g     F .text	00000016 __vector_15
00000254  w    F .text	00000024 printf_init()
000000b6  w      .text	00000000 __vector_29
00000178 g     F .text	00000012 IO_init()
000014ea g     F .text	0000021c LCD_init()
0000007c g       .text	00000000 __dtors_start
0000007c g       .text	00000000 __ctors_end
000008ff  w      *ABS*	00000000 __stack
00800116 g       .data	00000000 _edata
00800132 g       .bss	00000000 _end
000009ae g     F .text	000000a0 LCD_write(unsigned char)
000001b0  w    F .text	000000a4 LCD_generate_bars()
000000b6  w      .text	00000000 __vector_8
000000b6  w      .text	00000000 __vector_26
0000185a  w      .text	00000000 exit
000017ac g       .text	00000000 __udivmodsi4
00000b84 g     F .text	000000ee LCD_readStatus()
0000185a g       .text	00000000 _exit
000000b6  w      .text	00000000 __vector_14
00000a4e g     F .text	000000e6 LCD_read()
000000b6  w      .text	00000000 __vector_10
0080012c g     O .bss	00000006 __iob
000000b6  w      .text	00000000 __vector_16
00800100 g       .data	00000000 __data_start
000000b6  w      .text	00000000 __vector_18
000000b6  w      .text	00000000 __vector_20



Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 85 00 	jmp	0x10a	; 0x10a <__vector_5>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_12>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_13>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__vector_15>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ee e5       	ldi	r30, 0x5E	; 94
      90:	f8 e1       	ldi	r31, 0x18	; 24
      92:	02 c0       	rjmp	.+4      	; 0x98 <.do_copy_data_start>

00000094 <.do_copy_data_loop>:
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0

00000098 <.do_copy_data_start>:
      98:	a6 31       	cpi	r26, 0x16	; 22
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <.do_copy_data_loop>

0000009e <__do_clear_bss>:
      9e:	11 e0       	ldi	r17, 0x01	; 1
      a0:	a6 e1       	ldi	r26, 0x16	; 22
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a2 33       	cpi	r26, 0x32	; 50
      aa:	b1 07       	cpc	r27, r17
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <main>
      b2:	0c 94 2d 0c 	jmp	0x185a	; 0x185a <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <__vector_13>:
      ba:	1f 92       	push	r1
      bc:	0f 92       	push	r0
      be:	0f b6       	in	r0, 0x3f	; 63
      c0:	0f 92       	push	r0
      c2:	11 24       	eor	r1, r1
      c4:	5c 98       	cbi	0x0b, 4	; 11
      c6:	0f 90       	pop	r0
      c8:	0f be       	out	0x3f, r0	; 63
      ca:	0f 90       	pop	r0
      cc:	1f 90       	pop	r1
      ce:	18 95       	reti

000000d0 <__vector_15>:
      d0:	1f 92       	push	r1
      d2:	0f 92       	push	r0
      d4:	0f b6       	in	r0, 0x3f	; 63
      d6:	0f 92       	push	r0
      d8:	11 24       	eor	r1, r1
      da:	5c 9a       	sbi	0x0b, 4	; 11
      dc:	0f 90       	pop	r0
      de:	0f be       	out	0x3f, r0	; 63
      e0:	0f 90       	pop	r0
      e2:	1f 90       	pop	r1
      e4:	18 95       	reti

000000e6 <__vector_12>:
      e6:	1f 92       	push	r1
      e8:	0f 92       	push	r0
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	0f 92       	push	r0
      ee:	11 24       	eor	r1, r1
      f0:	8f 93       	push	r24
      f2:	9f 93       	push	r25
      f4:	8b b1       	in	r24, 0x0b	; 11
      f6:	90 e1       	ldi	r25, 0x10	; 16
      f8:	89 27       	eor	r24, r25
      fa:	8b b9       	out	0x0b, r24	; 11
      fc:	9f 91       	pop	r25
      fe:	8f 91       	pop	r24
     100:	0f 90       	pop	r0
     102:	0f be       	out	0x3f, r0	; 63
     104:	0f 90       	pop	r0
     106:	1f 90       	pop	r1
     108:	18 95       	reti

0000010a <__vector_5>:
     10a:	1f 92       	push	r1
     10c:	0f 92       	push	r0
     10e:	0f b6       	in	r0, 0x3f	; 63
     110:	0f 92       	push	r0
     112:	11 24       	eor	r1, r1
     114:	2f 93       	push	r18
     116:	8f 93       	push	r24
     118:	9f 93       	push	r25
     11a:	18 99       	sbic	0x03, 0	; 3
     11c:	0e c0       	rjmp	.+28     	; 0x13a <__vector_5+0x30>
     11e:	80 91 88 00 	lds	r24, 0x0088
     122:	90 91 89 00 	lds	r25, 0x0089
     126:	88 5e       	subi	r24, 0xE8	; 232
     128:	93 40       	sbci	r25, 0x03	; 3
     12a:	90 93 89 00 	sts	0x0089, r25
     12e:	80 93 88 00 	sts	0x0088, r24
     132:	80 91 88 00 	lds	r24, 0x0088
     136:	90 91 89 00 	lds	r25, 0x0089
     13a:	19 99       	sbic	0x03, 1	; 3
     13c:	15 c0       	rjmp	.+42     	; 0x168 <__vector_5+0x5e>
     13e:	80 91 88 00 	lds	r24, 0x0088
     142:	90 91 89 00 	lds	r25, 0x0089
     146:	88 51       	subi	r24, 0x18	; 24
     148:	9c 4f       	sbci	r25, 0xFC	; 252
     14a:	90 93 89 00 	sts	0x0089, r25
     14e:	80 93 88 00 	sts	0x0088, r24
     152:	80 91 88 00 	lds	r24, 0x0088
     156:	90 91 89 00 	lds	r25, 0x0089
     15a:	89 57       	subi	r24, 0x79	; 121
     15c:	90 45       	sbci	r25, 0x50	; 80
     15e:	20 f0       	brcs	.+8      	; 0x168 <__vector_5+0x5e>
     160:	10 92 89 00 	sts	0x0089, r1
     164:	10 92 88 00 	sts	0x0088, r1
     168:	9f 91       	pop	r25
     16a:	8f 91       	pop	r24
     16c:	2f 91       	pop	r18
     16e:	0f 90       	pop	r0
     170:	0f be       	out	0x3f, r0	; 63
     172:	0f 90       	pop	r0
     174:	1f 90       	pop	r1
     176:	18 95       	reti

00000178 <IO_init()>:
     178:	54 9a       	sbi	0x0a, 4	; 10
     17a:	23 9a       	sbi	0x04, 3	; 4
     17c:	84 b1       	in	r24, 0x04	; 4
     17e:	8c 7f       	andi	r24, 0xFC	; 252
     180:	84 b9       	out	0x04, r24	; 4
     182:	85 b1       	in	r24, 0x05	; 5
     184:	83 60       	ori	r24, 0x03	; 3
     186:	85 b9       	out	0x05, r24	; 5
     188:	08 95       	ret

0000018a <timer1_init()>:
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	90 ec       	ldi	r25, 0xC0	; 192
     18e:	90 93 89 00 	sts	0x0089, r25
     192:	80 93 88 00 	sts	0x0088, r24
     196:	80 e0       	ldi	r24, 0x00	; 0
     198:	90 e8       	ldi	r25, 0x80	; 128
     19a:	90 93 87 00 	sts	0x0087, r25
     19e:	80 93 86 00 	sts	0x0086, r24
     1a2:	83 e2       	ldi	r24, 0x23	; 35
     1a4:	80 93 6f 00 	sts	0x006F, r24
     1a8:	8d e1       	ldi	r24, 0x1D	; 29
     1aa:	80 93 81 00 	sts	0x0081, r24
     1ae:	08 95       	ret

000001b0 <LCD_generate_bars()>:
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	1f 93       	push	r17
     1ba:	df 93       	push	r29
     1bc:	cf 93       	push	r28
     1be:	cd b7       	in	r28, 0x3d	; 61
     1c0:	de b7       	in	r29, 0x3e	; 62
     1c2:	2c 97       	sbiw	r28, 0x0c	; 12
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	f8 94       	cli
     1c8:	de bf       	out	0x3e, r29	; 62
     1ca:	0f be       	out	0x3f, r0	; 63
     1cc:	cd bf       	out	0x3d, r28	; 61
     1ce:	7e 01       	movw	r14, r28
     1d0:	08 94       	sec
     1d2:	e1 1c       	adc	r14, r1
     1d4:	f1 1c       	adc	r15, r1
     1d6:	d7 01       	movw	r26, r14
     1d8:	e9 e0       	ldi	r30, 0x09	; 9
     1da:	f1 e0       	ldi	r31, 0x01	; 1
     1dc:	8c e0       	ldi	r24, 0x0C	; 12
     1de:	01 90       	ld	r0, Z+
     1e0:	0d 92       	st	X+, r0
     1e2:	81 50       	subi	r24, 0x01	; 1
     1e4:	e1 f7       	brne	.-8      	; 0x1de <LCD_generate_bars()+0x2e>
     1e6:	80 e4       	ldi	r24, 0x40	; 64
     1e8:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     1ec:	8d e0       	ldi	r24, 0x0D	; 13
     1ee:	c8 2e       	mov	r12, r24
     1f0:	d1 2c       	mov	r13, r1
     1f2:	cc 0e       	add	r12, r28
     1f4:	dd 1e       	adc	r13, r29
     1f6:	f7 01       	movw	r30, r14
     1f8:	10 81       	ld	r17, Z
     1fa:	81 2f       	mov	r24, r17
     1fc:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     200:	81 2f       	mov	r24, r17
     202:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     206:	81 2f       	mov	r24, r17
     208:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     20c:	81 2f       	mov	r24, r17
     20e:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     212:	81 2f       	mov	r24, r17
     214:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     218:	81 2f       	mov	r24, r17
     21a:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     21e:	81 2f       	mov	r24, r17
     220:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     224:	81 2f       	mov	r24, r17
     226:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     22a:	82 e0       	ldi	r24, 0x02	; 2
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	e8 0e       	add	r14, r24
     230:	f9 1e       	adc	r15, r25
     232:	ec 14       	cp	r14, r12
     234:	fd 04       	cpc	r15, r13
     236:	f9 f6       	brne	.-66     	; 0x1f6 <LCD_generate_bars()+0x46>
     238:	2c 96       	adiw	r28, 0x0c	; 12
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	f8 94       	cli
     23e:	de bf       	out	0x3e, r29	; 62
     240:	0f be       	out	0x3f, r0	; 63
     242:	cd bf       	out	0x3d, r28	; 61
     244:	cf 91       	pop	r28
     246:	df 91       	pop	r29
     248:	1f 91       	pop	r17
     24a:	ff 90       	pop	r15
     24c:	ef 90       	pop	r14
     24e:	df 90       	pop	r13
     250:	cf 90       	pop	r12
     252:	08 95       	ret

00000254 <printf_init()>:
     254:	82 e0       	ldi	r24, 0x02	; 2
     256:	80 93 21 01 	sts	0x0121, r24
     25a:	8d ea       	ldi	r24, 0xAD	; 173
     25c:	9b e0       	ldi	r25, 0x0B	; 11
     25e:	90 93 27 01 	sts	0x0127, r25
     262:	80 93 26 01 	sts	0x0126, r24
     266:	0e 94 83 0b 	call	0x1706	; 0x1706 <USART0_init()>
     26a:	8e e1       	ldi	r24, 0x1E	; 30
     26c:	91 e0       	ldi	r25, 0x01	; 1
     26e:	90 93 2f 01 	sts	0x012F, r25
     272:	80 93 2e 01 	sts	0x012E, r24
     276:	08 95       	ret

00000278 <drawProgressBars(unsigned long, unsigned long, unsigned int)>:
     278:	2f 92       	push	r2
     27a:	3f 92       	push	r3
     27c:	4f 92       	push	r4
     27e:	5f 92       	push	r5
     280:	6f 92       	push	r6
     282:	7f 92       	push	r7
     284:	8f 92       	push	r8
     286:	9f 92       	push	r9
     288:	af 92       	push	r10
     28a:	bf 92       	push	r11
     28c:	cf 92       	push	r12
     28e:	df 92       	push	r13
     290:	ef 92       	push	r14
     292:	ff 92       	push	r15
     294:	0f 93       	push	r16
     296:	1f 93       	push	r17
     298:	df 93       	push	r29
     29a:	cf 93       	push	r28
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	28 97       	sbiw	r28, 0x08	; 8
     2a2:	0f b6       	in	r0, 0x3f	; 63
     2a4:	f8 94       	cli
     2a6:	de bf       	out	0x3e, r29	; 62
     2a8:	0f be       	out	0x3f, r0	; 63
     2aa:	cd bf       	out	0x3d, r28	; 61
     2ac:	2d 83       	std	Y+5, r18	; 0x05
     2ae:	3e 83       	std	Y+6, r19	; 0x06
     2b0:	4f 83       	std	Y+7, r20	; 0x07
     2b2:	58 87       	std	Y+8, r21	; 0x08
     2b4:	98 01       	movw	r18, r16
     2b6:	40 e0       	ldi	r20, 0x00	; 0
     2b8:	50 e0       	ldi	r21, 0x00	; 0
     2ba:	29 83       	std	Y+1, r18	; 0x01
     2bc:	3a 83       	std	Y+2, r19	; 0x02
     2be:	4b 83       	std	Y+3, r20	; 0x03
     2c0:	5c 83       	std	Y+4, r21	; 0x04
     2c2:	2f e4       	ldi	r18, 0x4F	; 79
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	40 e0       	ldi	r20, 0x00	; 0
     2c8:	50 e0       	ldi	r21, 0x00	; 0
     2ca:	0e 94 b7 0b 	call	0x176e	; 0x176e <__mulsi3>
     2ce:	29 81       	ldd	r18, Y+1	; 0x01
     2d0:	3a 81       	ldd	r19, Y+2	; 0x02
     2d2:	4b 81       	ldd	r20, Y+3	; 0x03
     2d4:	5c 81       	ldd	r21, Y+4	; 0x04
     2d6:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     2da:	19 01       	movw	r2, r18
     2dc:	2a 01       	movw	r4, r20
     2de:	60 91 1a 01 	lds	r22, 0x011A
     2e2:	70 91 1b 01 	lds	r23, 0x011B
     2e6:	80 91 1c 01 	lds	r24, 0x011C
     2ea:	90 91 1d 01 	lds	r25, 0x011D
     2ee:	26 16       	cp	r2, r22
     2f0:	37 06       	cpc	r3, r23
     2f2:	48 06       	cpc	r4, r24
     2f4:	59 06       	cpc	r5, r25
     2f6:	08 f0       	brcs	.+2      	; 0x2fa <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x82>
     2f8:	2b c1       	rjmp	.+598    	; 0x550 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x2d8>
     2fa:	c2 01       	movw	r24, r4
     2fc:	b1 01       	movw	r22, r2
     2fe:	25 e0       	ldi	r18, 0x05	; 5
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	40 e0       	ldi	r20, 0x00	; 0
     304:	50 e0       	ldi	r21, 0x00	; 0
     306:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     30a:	59 01       	movw	r10, r18
     30c:	6a 01       	movw	r12, r20
     30e:	35 01       	movw	r6, r10
     310:	46 01       	movw	r8, r12
     312:	82 2f       	mov	r24, r18
     314:	80 58       	subi	r24, 0x80	; 128
     316:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     31a:	60 91 1a 01 	lds	r22, 0x011A
     31e:	70 91 1b 01 	lds	r23, 0x011B
     322:	80 91 1c 01 	lds	r24, 0x011C
     326:	90 91 1d 01 	lds	r25, 0x011D
     32a:	25 e0       	ldi	r18, 0x05	; 5
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	40 e0       	ldi	r20, 0x00	; 0
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     336:	c9 01       	movw	r24, r18
     338:	da 01       	movw	r26, r20
     33a:	7c 01       	movw	r14, r24
     33c:	8d 01       	movw	r16, r26
     33e:	ea 14       	cp	r14, r10
     340:	fb 04       	cpc	r15, r11
     342:	0c 05       	cpc	r16, r12
     344:	1d 05       	cpc	r17, r13
     346:	68 f4       	brcc	.+26     	; 0x362 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0xea>
     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     34e:	08 94       	sec
     350:	e1 1c       	adc	r14, r1
     352:	f1 1c       	adc	r15, r1
     354:	01 1d       	adc	r16, r1
     356:	11 1d       	adc	r17, r1
     358:	ea 14       	cp	r14, r10
     35a:	fb 04       	cpc	r15, r11
     35c:	0c 05       	cpc	r16, r12
     35e:	1d 05       	cpc	r17, r13
     360:	98 f3       	brcs	.-26     	; 0x348 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0xd0>
     362:	c2 01       	movw	r24, r4
     364:	b1 01       	movw	r22, r2
     366:	25 e0       	ldi	r18, 0x05	; 5
     368:	30 e0       	ldi	r19, 0x00	; 0
     36a:	40 e0       	ldi	r20, 0x00	; 0
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     372:	86 2f       	mov	r24, r22
     374:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     378:	30 e1       	ldi	r19, 0x10	; 16
     37a:	63 16       	cp	r6, r19
     37c:	71 04       	cpc	r7, r1
     37e:	81 04       	cpc	r8, r1
     380:	91 04       	cpc	r9, r1
     382:	70 f4       	brcc	.+28     	; 0x3a0 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x128>
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     38a:	08 94       	sec
     38c:	61 1c       	adc	r6, r1
     38e:	71 1c       	adc	r7, r1
     390:	81 1c       	adc	r8, r1
     392:	91 1c       	adc	r9, r1
     394:	40 e1       	ldi	r20, 0x10	; 16
     396:	64 16       	cp	r6, r20
     398:	71 04       	cpc	r7, r1
     39a:	81 04       	cpc	r8, r1
     39c:	91 04       	cpc	r9, r1
     39e:	90 f3       	brcs	.-28     	; 0x384 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x10c>
     3a0:	20 92 1a 01 	sts	0x011A, r2
     3a4:	30 92 1b 01 	sts	0x011B, r3
     3a8:	40 92 1c 01 	sts	0x011C, r4
     3ac:	50 92 1d 01 	sts	0x011D, r5
     3b0:	6d 81       	ldd	r22, Y+5	; 0x05
     3b2:	7e 81       	ldd	r23, Y+6	; 0x06
     3b4:	8f 81       	ldd	r24, Y+7	; 0x07
     3b6:	98 85       	ldd	r25, Y+8	; 0x08
     3b8:	2f e4       	ldi	r18, 0x4F	; 79
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	40 e0       	ldi	r20, 0x00	; 0
     3be:	50 e0       	ldi	r21, 0x00	; 0
     3c0:	0e 94 b7 0b 	call	0x176e	; 0x176e <__mulsi3>
     3c4:	29 81       	ldd	r18, Y+1	; 0x01
     3c6:	3a 81       	ldd	r19, Y+2	; 0x02
     3c8:	4b 81       	ldd	r20, Y+3	; 0x03
     3ca:	5c 81       	ldd	r21, Y+4	; 0x04
     3cc:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     3d0:	19 01       	movw	r2, r18
     3d2:	2a 01       	movw	r4, r20
     3d4:	60 91 16 01 	lds	r22, 0x0116
     3d8:	70 91 17 01 	lds	r23, 0x0117
     3dc:	80 91 18 01 	lds	r24, 0x0118
     3e0:	90 91 19 01 	lds	r25, 0x0119
     3e4:	26 16       	cp	r2, r22
     3e6:	37 06       	cpc	r3, r23
     3e8:	48 06       	cpc	r4, r24
     3ea:	59 06       	cpc	r5, r25
     3ec:	08 f0       	brcs	.+2      	; 0x3f0 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x178>
     3ee:	74 c0       	rjmp	.+232    	; 0x4d8 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x260>
     3f0:	c2 01       	movw	r24, r4
     3f2:	b1 01       	movw	r22, r2
     3f4:	25 e0       	ldi	r18, 0x05	; 5
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	40 e0       	ldi	r20, 0x00	; 0
     3fa:	50 e0       	ldi	r21, 0x00	; 0
     3fc:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     400:	59 01       	movw	r10, r18
     402:	6a 01       	movw	r12, r20
     404:	35 01       	movw	r6, r10
     406:	46 01       	movw	r8, r12
     408:	82 2f       	mov	r24, r18
     40a:	80 54       	subi	r24, 0x40	; 64
     40c:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     410:	60 91 16 01 	lds	r22, 0x0116
     414:	70 91 17 01 	lds	r23, 0x0117
     418:	80 91 18 01 	lds	r24, 0x0118
     41c:	90 91 19 01 	lds	r25, 0x0119
     420:	25 e0       	ldi	r18, 0x05	; 5
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	40 e0       	ldi	r20, 0x00	; 0
     426:	50 e0       	ldi	r21, 0x00	; 0
     428:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     42c:	c9 01       	movw	r24, r18
     42e:	da 01       	movw	r26, r20
     430:	7c 01       	movw	r14, r24
     432:	8d 01       	movw	r16, r26
     434:	ea 14       	cp	r14, r10
     436:	fb 04       	cpc	r15, r11
     438:	0c 05       	cpc	r16, r12
     43a:	1d 05       	cpc	r17, r13
     43c:	68 f4       	brcc	.+26     	; 0x458 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x1e0>
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     444:	08 94       	sec
     446:	e1 1c       	adc	r14, r1
     448:	f1 1c       	adc	r15, r1
     44a:	01 1d       	adc	r16, r1
     44c:	11 1d       	adc	r17, r1
     44e:	ea 14       	cp	r14, r10
     450:	fb 04       	cpc	r15, r11
     452:	0c 05       	cpc	r16, r12
     454:	1d 05       	cpc	r17, r13
     456:	98 f3       	brcs	.-26     	; 0x43e <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x1c6>
     458:	c2 01       	movw	r24, r4
     45a:	b1 01       	movw	r22, r2
     45c:	25 e0       	ldi	r18, 0x05	; 5
     45e:	30 e0       	ldi	r19, 0x00	; 0
     460:	40 e0       	ldi	r20, 0x00	; 0
     462:	50 e0       	ldi	r21, 0x00	; 0
     464:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     468:	86 2f       	mov	r24, r22
     46a:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     46e:	50 e1       	ldi	r21, 0x10	; 16
     470:	65 16       	cp	r6, r21
     472:	71 04       	cpc	r7, r1
     474:	81 04       	cpc	r8, r1
     476:	91 04       	cpc	r9, r1
     478:	70 f4       	brcc	.+28     	; 0x496 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x21e>
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     480:	08 94       	sec
     482:	61 1c       	adc	r6, r1
     484:	71 1c       	adc	r7, r1
     486:	81 1c       	adc	r8, r1
     488:	91 1c       	adc	r9, r1
     48a:	80 e1       	ldi	r24, 0x10	; 16
     48c:	68 16       	cp	r6, r24
     48e:	71 04       	cpc	r7, r1
     490:	81 04       	cpc	r8, r1
     492:	91 04       	cpc	r9, r1
     494:	90 f3       	brcs	.-28     	; 0x47a <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x202>
     496:	20 92 16 01 	sts	0x0116, r2
     49a:	30 92 17 01 	sts	0x0117, r3
     49e:	40 92 18 01 	sts	0x0118, r4
     4a2:	50 92 19 01 	sts	0x0119, r5
     4a6:	28 96       	adiw	r28, 0x08	; 8
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	f8 94       	cli
     4ac:	de bf       	out	0x3e, r29	; 62
     4ae:	0f be       	out	0x3f, r0	; 63
     4b0:	cd bf       	out	0x3d, r28	; 61
     4b2:	cf 91       	pop	r28
     4b4:	df 91       	pop	r29
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	df 90       	pop	r13
     4c0:	cf 90       	pop	r12
     4c2:	bf 90       	pop	r11
     4c4:	af 90       	pop	r10
     4c6:	9f 90       	pop	r9
     4c8:	8f 90       	pop	r8
     4ca:	7f 90       	pop	r7
     4cc:	6f 90       	pop	r6
     4ce:	5f 90       	pop	r5
     4d0:	4f 90       	pop	r4
     4d2:	3f 90       	pop	r3
     4d4:	2f 90       	pop	r2
     4d6:	08 95       	ret
     4d8:	25 e0       	ldi	r18, 0x05	; 5
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	40 e0       	ldi	r20, 0x00	; 0
     4de:	50 e0       	ldi	r21, 0x00	; 0
     4e0:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     4e4:	82 2f       	mov	r24, r18
     4e6:	80 54       	subi	r24, 0x40	; 64
     4e8:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     4ec:	60 91 16 01 	lds	r22, 0x0116
     4f0:	70 91 17 01 	lds	r23, 0x0117
     4f4:	80 91 18 01 	lds	r24, 0x0118
     4f8:	90 91 19 01 	lds	r25, 0x0119
     4fc:	25 e0       	ldi	r18, 0x05	; 5
     4fe:	30 e0       	ldi	r19, 0x00	; 0
     500:	40 e0       	ldi	r20, 0x00	; 0
     502:	50 e0       	ldi	r21, 0x00	; 0
     504:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     508:	c9 01       	movw	r24, r18
     50a:	da 01       	movw	r26, r20
     50c:	5c 01       	movw	r10, r24
     50e:	6d 01       	movw	r12, r26
     510:	c2 01       	movw	r24, r4
     512:	b1 01       	movw	r22, r2
     514:	25 e0       	ldi	r18, 0x05	; 5
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	40 e0       	ldi	r20, 0x00	; 0
     51a:	50 e0       	ldi	r21, 0x00	; 0
     51c:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     520:	79 01       	movw	r14, r18
     522:	8a 01       	movw	r16, r20
     524:	37 01       	movw	r6, r14
     526:	48 01       	movw	r8, r16
     528:	ae 14       	cp	r10, r14
     52a:	bf 04       	cpc	r11, r15
     52c:	c0 06       	cpc	r12, r16
     52e:	d1 06       	cpc	r13, r17
     530:	08 f0       	brcs	.+2      	; 0x534 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x2bc>
     532:	92 cf       	rjmp	.-220    	; 0x458 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x1e0>
     534:	85 e0       	ldi	r24, 0x05	; 5
     536:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     53a:	08 94       	sec
     53c:	a1 1c       	adc	r10, r1
     53e:	b1 1c       	adc	r11, r1
     540:	c1 1c       	adc	r12, r1
     542:	d1 1c       	adc	r13, r1
     544:	ae 14       	cp	r10, r14
     546:	bf 04       	cpc	r11, r15
     548:	c0 06       	cpc	r12, r16
     54a:	d1 06       	cpc	r13, r17
     54c:	98 f3       	brcs	.-26     	; 0x534 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x2bc>
     54e:	84 cf       	rjmp	.-248    	; 0x458 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x1e0>
     550:	25 e0       	ldi	r18, 0x05	; 5
     552:	30 e0       	ldi	r19, 0x00	; 0
     554:	40 e0       	ldi	r20, 0x00	; 0
     556:	50 e0       	ldi	r21, 0x00	; 0
     558:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     55c:	82 2f       	mov	r24, r18
     55e:	80 58       	subi	r24, 0x80	; 128
     560:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     564:	60 91 1a 01 	lds	r22, 0x011A
     568:	70 91 1b 01 	lds	r23, 0x011B
     56c:	80 91 1c 01 	lds	r24, 0x011C
     570:	90 91 1d 01 	lds	r25, 0x011D
     574:	25 e0       	ldi	r18, 0x05	; 5
     576:	30 e0       	ldi	r19, 0x00	; 0
     578:	40 e0       	ldi	r20, 0x00	; 0
     57a:	50 e0       	ldi	r21, 0x00	; 0
     57c:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     580:	c9 01       	movw	r24, r18
     582:	da 01       	movw	r26, r20
     584:	5c 01       	movw	r10, r24
     586:	6d 01       	movw	r12, r26
     588:	c2 01       	movw	r24, r4
     58a:	b1 01       	movw	r22, r2
     58c:	25 e0       	ldi	r18, 0x05	; 5
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	40 e0       	ldi	r20, 0x00	; 0
     592:	50 e0       	ldi	r21, 0x00	; 0
     594:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     598:	79 01       	movw	r14, r18
     59a:	8a 01       	movw	r16, r20
     59c:	37 01       	movw	r6, r14
     59e:	48 01       	movw	r8, r16
     5a0:	ae 14       	cp	r10, r14
     5a2:	bf 04       	cpc	r11, r15
     5a4:	c0 06       	cpc	r12, r16
     5a6:	d1 06       	cpc	r13, r17
     5a8:	08 f0       	brcs	.+2      	; 0x5ac <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x334>
     5aa:	db ce       	rjmp	.-586    	; 0x362 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0xea>
     5ac:	85 e0       	ldi	r24, 0x05	; 5
     5ae:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     5b2:	08 94       	sec
     5b4:	a1 1c       	adc	r10, r1
     5b6:	b1 1c       	adc	r11, r1
     5b8:	c1 1c       	adc	r12, r1
     5ba:	d1 1c       	adc	r13, r1
     5bc:	ae 14       	cp	r10, r14
     5be:	bf 04       	cpc	r11, r15
     5c0:	c0 06       	cpc	r12, r16
     5c2:	d1 06       	cpc	r13, r17
     5c4:	98 f3       	brcs	.-26     	; 0x5ac <drawProgressBars(unsigned long, unsigned long, unsigned int)+0x334>
     5c6:	cd ce       	rjmp	.-614    	; 0x362 <drawProgressBars(unsigned long, unsigned long, unsigned int)+0xea>

000005c8 <main>:
     5c8:	2f 92       	push	r2
     5ca:	3f 92       	push	r3
     5cc:	4f 92       	push	r4
     5ce:	5f 92       	push	r5
     5d0:	6f 92       	push	r6
     5d2:	7f 92       	push	r7
     5d4:	8f 92       	push	r8
     5d6:	9f 92       	push	r9
     5d8:	af 92       	push	r10
     5da:	bf 92       	push	r11
     5dc:	cf 92       	push	r12
     5de:	df 92       	push	r13
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	df 93       	push	r29
     5ea:	cf 93       	push	r28
     5ec:	cd b7       	in	r28, 0x3d	; 61
     5ee:	de b7       	in	r29, 0x3e	; 62
     5f0:	2e 97       	sbiw	r28, 0x0e	; 14
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	f8 94       	cli
     5f6:	de bf       	out	0x3e, r29	; 62
     5f8:	0f be       	out	0x3f, r0	; 63
     5fa:	cd bf       	out	0x3d, r28	; 61
     5fc:	0e 94 75 0a 	call	0x14ea	; 0x14ea <LCD_init()>
     600:	8e 01       	movw	r16, r28
     602:	0f 5f       	subi	r16, 0xFF	; 255
     604:	1f 4f       	sbci	r17, 0xFF	; 255
     606:	d8 01       	movw	r26, r16
     608:	e9 e0       	ldi	r30, 0x09	; 9
     60a:	f1 e0       	ldi	r31, 0x01	; 1
     60c:	8c e0       	ldi	r24, 0x0C	; 12
     60e:	01 90       	ld	r0, Z+
     610:	0d 92       	st	X+, r0
     612:	81 50       	subi	r24, 0x01	; 1
     614:	e1 f7       	brne	.-8      	; 0x60e <main+0x46>
     616:	80 e4       	ldi	r24, 0x40	; 64
     618:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     61c:	78 01       	movw	r14, r16
     61e:	9d e0       	ldi	r25, 0x0D	; 13
     620:	a9 2e       	mov	r10, r25
     622:	b1 2c       	mov	r11, r1
     624:	ac 0e       	add	r10, r28
     626:	bd 1e       	adc	r11, r29
     628:	f7 01       	movw	r30, r14
     62a:	d0 80       	ld	r13, Z
     62c:	00 e0       	ldi	r16, 0x00	; 0
     62e:	10 e0       	ldi	r17, 0x00	; 0
     630:	8d 2d       	mov	r24, r13
     632:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     636:	0f 5f       	subi	r16, 0xFF	; 255
     638:	1f 4f       	sbci	r17, 0xFF	; 255
     63a:	08 30       	cpi	r16, 0x08	; 8
     63c:	11 05       	cpc	r17, r1
     63e:	c1 f7       	brne	.-16     	; 0x630 <main+0x68>
     640:	22 e0       	ldi	r18, 0x02	; 2
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	e2 0e       	add	r14, r18
     646:	f3 1e       	adc	r15, r19
     648:	ea 14       	cp	r14, r10
     64a:	fb 04       	cpc	r15, r11
     64c:	69 f7       	brne	.-38     	; 0x628 <main+0x60>
     64e:	82 e0       	ldi	r24, 0x02	; 2
     650:	80 93 21 01 	sts	0x0121, r24
     654:	8d ea       	ldi	r24, 0xAD	; 173
     656:	9b e0       	ldi	r25, 0x0B	; 11
     658:	90 93 27 01 	sts	0x0127, r25
     65c:	80 93 26 01 	sts	0x0126, r24
     660:	0e 94 83 0b 	call	0x1706	; 0x1706 <USART0_init()>
     664:	8e e1       	ldi	r24, 0x1E	; 30
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	90 93 2f 01 	sts	0x012F, r25
     66c:	80 93 2e 01 	sts	0x012E, r24
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	91 e0       	ldi	r25, 0x01	; 1
     674:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <puts>
     678:	78 94       	sei
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	90 ec       	ldi	r25, 0xC0	; 192
     67e:	90 93 89 00 	sts	0x0089, r25
     682:	80 93 88 00 	sts	0x0088, r24
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	90 e8       	ldi	r25, 0x80	; 128
     68a:	90 93 87 00 	sts	0x0087, r25
     68e:	80 93 86 00 	sts	0x0086, r24
     692:	83 e2       	ldi	r24, 0x23	; 35
     694:	80 93 6f 00 	sts	0x006F, r24
     698:	8d e1       	ldi	r24, 0x1D	; 29
     69a:	80 93 81 00 	sts	0x0081, r24
     69e:	54 9a       	sbi	0x0a, 4	; 10
     6a0:	23 9a       	sbi	0x04, 3	; 4
     6a2:	84 b1       	in	r24, 0x04	; 4
     6a4:	8c 7f       	andi	r24, 0xFC	; 252
     6a6:	84 b9       	out	0x04, r24	; 4
     6a8:	85 b1       	in	r24, 0x05	; 5
     6aa:	83 60       	ori	r24, 0x03	; 3
     6ac:	85 b9       	out	0x05, r24	; 5
     6ae:	80 91 6c 00 	lds	r24, 0x006C
     6b2:	81 60       	ori	r24, 0x01	; 1
     6b4:	80 93 6c 00 	sts	0x006C, r24
     6b8:	80 91 6c 00 	lds	r24, 0x006C
     6bc:	82 60       	ori	r24, 0x02	; 2
     6be:	80 93 6c 00 	sts	0x006C, r24
     6c2:	80 91 68 00 	lds	r24, 0x0068
     6c6:	81 60       	ori	r24, 0x01	; 1
     6c8:	80 93 68 00 	sts	0x0068, r24
     6cc:	80 91 68 00 	lds	r24, 0x0068
     6d0:	82 60       	ori	r24, 0x02	; 2
     6d2:	80 93 68 00 	sts	0x0068, r24
     6d6:	60 91 84 00 	lds	r22, 0x0084
     6da:	70 91 85 00 	lds	r23, 0x0085
     6de:	20 91 88 00 	lds	r18, 0x0088
     6e2:	30 91 89 00 	lds	r19, 0x0089
     6e6:	3e 87       	std	Y+14, r19	; 0x0e
     6e8:	2d 87       	std	Y+13, r18	; 0x0d
     6ea:	80 e0       	ldi	r24, 0x00	; 0
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	2f e4       	ldi	r18, 0x4F	; 79
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	40 e0       	ldi	r20, 0x00	; 0
     6f4:	50 e0       	ldi	r21, 0x00	; 0
     6f6:	0e 94 b7 0b 	call	0x176e	; 0x176e <__mulsi3>
     6fa:	2f ef       	ldi	r18, 0xFF	; 255
     6fc:	3f ef       	ldi	r19, 0xFF	; 255
     6fe:	40 e0       	ldi	r20, 0x00	; 0
     700:	50 e0       	ldi	r21, 0x00	; 0
     702:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     706:	19 01       	movw	r2, r18
     708:	2a 01       	movw	r4, r20
     70a:	60 91 1a 01 	lds	r22, 0x011A
     70e:	70 91 1b 01 	lds	r23, 0x011B
     712:	80 91 1c 01 	lds	r24, 0x011C
     716:	90 91 1d 01 	lds	r25, 0x011D
     71a:	26 16       	cp	r2, r22
     71c:	37 06       	cpc	r3, r23
     71e:	48 06       	cpc	r4, r24
     720:	59 06       	cpc	r5, r25
     722:	08 f0       	brcs	.+2      	; 0x726 <main+0x15e>
     724:	08 c1       	rjmp	.+528    	; 0x936 <__stack+0x37>
     726:	c2 01       	movw	r24, r4
     728:	b1 01       	movw	r22, r2
     72a:	25 e0       	ldi	r18, 0x05	; 5
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     736:	59 01       	movw	r10, r18
     738:	6a 01       	movw	r12, r20
     73a:	35 01       	movw	r6, r10
     73c:	46 01       	movw	r8, r12
     73e:	82 2f       	mov	r24, r18
     740:	80 58       	subi	r24, 0x80	; 128
     742:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     746:	60 91 1a 01 	lds	r22, 0x011A
     74a:	70 91 1b 01 	lds	r23, 0x011B
     74e:	80 91 1c 01 	lds	r24, 0x011C
     752:	90 91 1d 01 	lds	r25, 0x011D
     756:	25 e0       	ldi	r18, 0x05	; 5
     758:	30 e0       	ldi	r19, 0x00	; 0
     75a:	40 e0       	ldi	r20, 0x00	; 0
     75c:	50 e0       	ldi	r21, 0x00	; 0
     75e:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     762:	c9 01       	movw	r24, r18
     764:	da 01       	movw	r26, r20
     766:	7c 01       	movw	r14, r24
     768:	8d 01       	movw	r16, r26
     76a:	ea 14       	cp	r14, r10
     76c:	fb 04       	cpc	r15, r11
     76e:	0c 05       	cpc	r16, r12
     770:	1d 05       	cpc	r17, r13
     772:	68 f4       	brcc	.+26     	; 0x78e <main+0x1c6>
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     77a:	08 94       	sec
     77c:	e1 1c       	adc	r14, r1
     77e:	f1 1c       	adc	r15, r1
     780:	01 1d       	adc	r16, r1
     782:	11 1d       	adc	r17, r1
     784:	ea 14       	cp	r14, r10
     786:	fb 04       	cpc	r15, r11
     788:	0c 05       	cpc	r16, r12
     78a:	1d 05       	cpc	r17, r13
     78c:	98 f3       	brcs	.-26     	; 0x774 <main+0x1ac>
     78e:	c2 01       	movw	r24, r4
     790:	b1 01       	movw	r22, r2
     792:	25 e0       	ldi	r18, 0x05	; 5
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	40 e0       	ldi	r20, 0x00	; 0
     798:	50 e0       	ldi	r21, 0x00	; 0
     79a:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     79e:	86 2f       	mov	r24, r22
     7a0:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     7aa:	08 94       	sec
     7ac:	61 1c       	adc	r6, r1
     7ae:	71 1c       	adc	r7, r1
     7b0:	81 1c       	adc	r8, r1
     7b2:	91 1c       	adc	r9, r1
     7b4:	30 e1       	ldi	r19, 0x10	; 16
     7b6:	63 16       	cp	r6, r19
     7b8:	71 04       	cpc	r7, r1
     7ba:	81 04       	cpc	r8, r1
     7bc:	91 04       	cpc	r9, r1
     7be:	91 f7       	brne	.-28     	; 0x7a4 <main+0x1dc>
     7c0:	20 92 1a 01 	sts	0x011A, r2
     7c4:	30 92 1b 01 	sts	0x011B, r3
     7c8:	40 92 1c 01 	sts	0x011C, r4
     7cc:	50 92 1d 01 	sts	0x011D, r5
     7d0:	ed 85       	ldd	r30, Y+13	; 0x0d
     7d2:	fe 85       	ldd	r31, Y+14	; 0x0e
     7d4:	bf 01       	movw	r22, r30
     7d6:	80 e0       	ldi	r24, 0x00	; 0
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	2f e4       	ldi	r18, 0x4F	; 79
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	40 e0       	ldi	r20, 0x00	; 0
     7e0:	50 e0       	ldi	r21, 0x00	; 0
     7e2:	0e 94 b7 0b 	call	0x176e	; 0x176e <__mulsi3>
     7e6:	2f ef       	ldi	r18, 0xFF	; 255
     7e8:	3f ef       	ldi	r19, 0xFF	; 255
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     7f2:	19 01       	movw	r2, r18
     7f4:	2a 01       	movw	r4, r20
     7f6:	60 91 16 01 	lds	r22, 0x0116
     7fa:	70 91 17 01 	lds	r23, 0x0117
     7fe:	80 91 18 01 	lds	r24, 0x0118
     802:	90 91 19 01 	lds	r25, 0x0119
     806:	26 16       	cp	r2, r22
     808:	37 06       	cpc	r3, r23
     80a:	48 06       	cpc	r4, r24
     80c:	59 06       	cpc	r5, r25
     80e:	08 f0       	brcs	.+2      	; 0x812 <main+0x24a>
     810:	56 c0       	rjmp	.+172    	; 0x8be <main+0x2f6>
     812:	c2 01       	movw	r24, r4
     814:	b1 01       	movw	r22, r2
     816:	25 e0       	ldi	r18, 0x05	; 5
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	40 e0       	ldi	r20, 0x00	; 0
     81c:	50 e0       	ldi	r21, 0x00	; 0
     81e:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     822:	59 01       	movw	r10, r18
     824:	6a 01       	movw	r12, r20
     826:	35 01       	movw	r6, r10
     828:	46 01       	movw	r8, r12
     82a:	82 2f       	mov	r24, r18
     82c:	80 54       	subi	r24, 0x40	; 64
     82e:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     832:	60 91 16 01 	lds	r22, 0x0116
     836:	70 91 17 01 	lds	r23, 0x0117
     83a:	80 91 18 01 	lds	r24, 0x0118
     83e:	90 91 19 01 	lds	r25, 0x0119
     842:	25 e0       	ldi	r18, 0x05	; 5
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	40 e0       	ldi	r20, 0x00	; 0
     848:	50 e0       	ldi	r21, 0x00	; 0
     84a:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     84e:	c9 01       	movw	r24, r18
     850:	da 01       	movw	r26, r20
     852:	7c 01       	movw	r14, r24
     854:	8d 01       	movw	r16, r26
     856:	ea 14       	cp	r14, r10
     858:	fb 04       	cpc	r15, r11
     85a:	0c 05       	cpc	r16, r12
     85c:	1d 05       	cpc	r17, r13
     85e:	68 f4       	brcc	.+26     	; 0x87a <main+0x2b2>
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     866:	08 94       	sec
     868:	e1 1c       	adc	r14, r1
     86a:	f1 1c       	adc	r15, r1
     86c:	01 1d       	adc	r16, r1
     86e:	11 1d       	adc	r17, r1
     870:	ea 14       	cp	r14, r10
     872:	fb 04       	cpc	r15, r11
     874:	0c 05       	cpc	r16, r12
     876:	1d 05       	cpc	r17, r13
     878:	98 f3       	brcs	.-26     	; 0x860 <main+0x298>
     87a:	c2 01       	movw	r24, r4
     87c:	b1 01       	movw	r22, r2
     87e:	25 e0       	ldi	r18, 0x05	; 5
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     88a:	86 2f       	mov	r24, r22
     88c:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     896:	08 94       	sec
     898:	61 1c       	adc	r6, r1
     89a:	71 1c       	adc	r7, r1
     89c:	81 1c       	adc	r8, r1
     89e:	91 1c       	adc	r9, r1
     8a0:	f0 e1       	ldi	r31, 0x10	; 16
     8a2:	6f 16       	cp	r6, r31
     8a4:	71 04       	cpc	r7, r1
     8a6:	81 04       	cpc	r8, r1
     8a8:	91 04       	cpc	r9, r1
     8aa:	91 f7       	brne	.-28     	; 0x890 <main+0x2c8>
     8ac:	20 92 16 01 	sts	0x0116, r2
     8b0:	30 92 17 01 	sts	0x0117, r3
     8b4:	40 92 18 01 	sts	0x0118, r4
     8b8:	50 92 19 01 	sts	0x0119, r5
     8bc:	0c cf       	rjmp	.-488    	; 0x6d6 <main+0x10e>
     8be:	25 e0       	ldi	r18, 0x05	; 5
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	40 e0       	ldi	r20, 0x00	; 0
     8c4:	50 e0       	ldi	r21, 0x00	; 0
     8c6:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     8ca:	82 2f       	mov	r24, r18
     8cc:	80 54       	subi	r24, 0x40	; 64
     8ce:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     8d2:	60 91 16 01 	lds	r22, 0x0116
     8d6:	70 91 17 01 	lds	r23, 0x0117
     8da:	80 91 18 01 	lds	r24, 0x0118
     8de:	90 91 19 01 	lds	r25, 0x0119
     8e2:	25 e0       	ldi	r18, 0x05	; 5
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	50 e0       	ldi	r21, 0x00	; 0
     8ea:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     8ee:	c9 01       	movw	r24, r18
     8f0:	da 01       	movw	r26, r20
     8f2:	5c 01       	movw	r10, r24
     8f4:	6d 01       	movw	r12, r26
     8f6:	c2 01       	movw	r24, r4
     8f8:	b1 01       	movw	r22, r2
     8fa:	25 e0       	ldi	r18, 0x05	; 5
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	40 e0       	ldi	r20, 0x00	; 0
     900:	50 e0       	ldi	r21, 0x00	; 0
     902:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     906:	79 01       	movw	r14, r18
     908:	8a 01       	movw	r16, r20
     90a:	37 01       	movw	r6, r14
     90c:	48 01       	movw	r8, r16
     90e:	ae 14       	cp	r10, r14
     910:	bf 04       	cpc	r11, r15
     912:	c0 06       	cpc	r12, r16
     914:	d1 06       	cpc	r13, r17
     916:	08 f0       	brcs	.+2      	; 0x91a <__stack+0x1b>
     918:	b0 cf       	rjmp	.-160    	; 0x87a <main+0x2b2>
     91a:	85 e0       	ldi	r24, 0x05	; 5
     91c:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     920:	08 94       	sec
     922:	a1 1c       	adc	r10, r1
     924:	b1 1c       	adc	r11, r1
     926:	c1 1c       	adc	r12, r1
     928:	d1 1c       	adc	r13, r1
     92a:	ae 14       	cp	r10, r14
     92c:	bf 04       	cpc	r11, r15
     92e:	c0 06       	cpc	r12, r16
     930:	d1 06       	cpc	r13, r17
     932:	98 f3       	brcs	.-26     	; 0x91a <__stack+0x1b>
     934:	a2 cf       	rjmp	.-188    	; 0x87a <main+0x2b2>
     936:	25 e0       	ldi	r18, 0x05	; 5
     938:	30 e0       	ldi	r19, 0x00	; 0
     93a:	40 e0       	ldi	r20, 0x00	; 0
     93c:	50 e0       	ldi	r21, 0x00	; 0
     93e:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     942:	82 2f       	mov	r24, r18
     944:	80 58       	subi	r24, 0x80	; 128
     946:	0e 94 56 07 	call	0xeac	; 0xeac <LCD_writeInstr(unsigned char)>
     94a:	60 91 1a 01 	lds	r22, 0x011A
     94e:	70 91 1b 01 	lds	r23, 0x011B
     952:	80 91 1c 01 	lds	r24, 0x011C
     956:	90 91 1d 01 	lds	r25, 0x011D
     95a:	25 e0       	ldi	r18, 0x05	; 5
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	40 e0       	ldi	r20, 0x00	; 0
     960:	50 e0       	ldi	r21, 0x00	; 0
     962:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     966:	c9 01       	movw	r24, r18
     968:	da 01       	movw	r26, r20
     96a:	5c 01       	movw	r10, r24
     96c:	6d 01       	movw	r12, r26
     96e:	c2 01       	movw	r24, r4
     970:	b1 01       	movw	r22, r2
     972:	25 e0       	ldi	r18, 0x05	; 5
     974:	30 e0       	ldi	r19, 0x00	; 0
     976:	40 e0       	ldi	r20, 0x00	; 0
     978:	50 e0       	ldi	r21, 0x00	; 0
     97a:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__udivmodsi4>
     97e:	79 01       	movw	r14, r18
     980:	8a 01       	movw	r16, r20
     982:	37 01       	movw	r6, r14
     984:	48 01       	movw	r8, r16
     986:	ae 14       	cp	r10, r14
     988:	bf 04       	cpc	r11, r15
     98a:	c0 06       	cpc	r12, r16
     98c:	d1 06       	cpc	r13, r17
     98e:	08 f0       	brcs	.+2      	; 0x992 <__stack+0x93>
     990:	fe ce       	rjmp	.-516    	; 0x78e <main+0x1c6>
     992:	85 e0       	ldi	r24, 0x05	; 5
     994:	0e 94 b0 06 	call	0xd60	; 0xd60 <LCD_writeData(unsigned char)>
     998:	08 94       	sec
     99a:	a1 1c       	adc	r10, r1
     99c:	b1 1c       	adc	r11, r1
     99e:	c1 1c       	adc	r12, r1
     9a0:	d1 1c       	adc	r13, r1
     9a2:	ae 14       	cp	r10, r14
     9a4:	bf 04       	cpc	r11, r15
     9a6:	c0 06       	cpc	r12, r16
     9a8:	d1 06       	cpc	r13, r17
     9aa:	98 f3       	brcs	.-26     	; 0x992 <__stack+0x93>
     9ac:	f0 ce       	rjmp	.-544    	; 0x78e <main+0x1c6>

000009ae <LCD_write(unsigned char)>:
     9ae:	42 9a       	sbi	0x08, 2	; 8
     9b0:	98 b1       	in	r25, 0x08	; 8
     9b2:	48 2f       	mov	r20, r24
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	88 1f       	adc	r24, r24
     9b8:	88 27       	eor	r24, r24
     9ba:	88 1f       	adc	r24, r24
     9bc:	82 95       	swap	r24
     9be:	88 0f       	add	r24, r24
     9c0:	88 0f       	add	r24, r24
     9c2:	80 7c       	andi	r24, 0xC0	; 192
     9c4:	9a 01       	movw	r18, r20
     9c6:	36 95       	lsr	r19
     9c8:	27 95       	ror	r18
     9ca:	20 72       	andi	r18, 0x20	; 32
     9cc:	30 70       	andi	r19, 0x00	; 0
     9ce:	82 2b       	or	r24, r18
     9d0:	97 78       	andi	r25, 0x87	; 135
     9d2:	89 2b       	or	r24, r25
     9d4:	9a 01       	movw	r18, r20
     9d6:	36 95       	lsr	r19
     9d8:	27 95       	ror	r18
     9da:	20 71       	andi	r18, 0x10	; 16
     9dc:	30 70       	andi	r19, 0x00	; 0
     9de:	82 2b       	or	r24, r18
     9e0:	9a 01       	movw	r18, r20
     9e2:	36 95       	lsr	r19
     9e4:	27 95       	ror	r18
     9e6:	28 70       	andi	r18, 0x08	; 8
     9e8:	30 70       	andi	r19, 0x00	; 0
     9ea:	82 2b       	or	r24, r18
     9ec:	88 b9       	out	0x08, r24	; 8
     9ee:	00 c0       	rjmp	.+0      	; 0x9f0 <LCD_write(unsigned char)+0x42>
     9f0:	00 c0       	rjmp	.+0      	; 0x9f2 <LCD_write(unsigned char)+0x44>
     9f2:	42 98       	cbi	0x08, 2	; 8
     9f4:	00 c0       	rjmp	.+0      	; 0x9f6 <LCD_write(unsigned char)+0x48>
     9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <LCD_write(unsigned char)+0x4a>
     9f8:	42 9a       	sbi	0x08, 2	; 8
     9fa:	28 b1       	in	r18, 0x08	; 8
     9fc:	ca 01       	movw	r24, r20
     9fe:	81 70       	andi	r24, 0x01	; 1
     a00:	90 70       	andi	r25, 0x00	; 0
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	88 0f       	add	r24, r24
     a08:	99 1f       	adc	r25, r25
     a0a:	88 0f       	add	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	27 78       	andi	r18, 0x87	; 135
     a10:	28 2b       	or	r18, r24
     a12:	ca 01       	movw	r24, r20
     a14:	88 0f       	add	r24, r24
     a16:	99 1f       	adc	r25, r25
     a18:	88 0f       	add	r24, r24
     a1a:	99 1f       	adc	r25, r25
     a1c:	88 0f       	add	r24, r24
     a1e:	99 1f       	adc	r25, r25
     a20:	80 74       	andi	r24, 0x40	; 64
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	28 2b       	or	r18, r24
     a26:	44 0f       	add	r20, r20
     a28:	55 1f       	adc	r21, r21
     a2a:	44 0f       	add	r20, r20
     a2c:	55 1f       	adc	r21, r21
     a2e:	44 0f       	add	r20, r20
     a30:	55 1f       	adc	r21, r21
     a32:	ca 01       	movw	r24, r20
     a34:	80 72       	andi	r24, 0x20	; 32
     a36:	90 70       	andi	r25, 0x00	; 0
     a38:	28 2b       	or	r18, r24
     a3a:	40 71       	andi	r20, 0x10	; 16
     a3c:	50 70       	andi	r21, 0x00	; 0
     a3e:	24 2b       	or	r18, r20
     a40:	28 b9       	out	0x08, r18	; 8
     a42:	00 c0       	rjmp	.+0      	; 0xa44 <LCD_write(unsigned char)+0x96>
     a44:	00 c0       	rjmp	.+0      	; 0xa46 <LCD_write(unsigned char)+0x98>
     a46:	42 98       	cbi	0x08, 2	; 8
     a48:	00 c0       	rjmp	.+0      	; 0xa4a <LCD_write(unsigned char)+0x9c>
     a4a:	00 c0       	rjmp	.+0      	; 0xa4c <LCD_write(unsigned char)+0x9e>
     a4c:	08 95       	ret

00000a4e <LCD_read()>:
     a4e:	cf 92       	push	r12
     a50:	df 92       	push	r13
     a52:	ef 92       	push	r14
     a54:	ff 92       	push	r15
     a56:	0f 93       	push	r16
     a58:	1f 93       	push	r17
     a5a:	87 b1       	in	r24, 0x07	; 7
     a5c:	87 78       	andi	r24, 0x87	; 135
     a5e:	87 b9       	out	0x07, r24	; 7
     a60:	88 b1       	in	r24, 0x08	; 8
     a62:	87 78       	andi	r24, 0x87	; 135
     a64:	88 b9       	out	0x08, r24	; 8
     a66:	42 9a       	sbi	0x08, 2	; 8
     a68:	00 c0       	rjmp	.+0      	; 0xa6a <LCD_read()+0x1c>
     a6a:	00 c0       	rjmp	.+0      	; 0xa6c <LCD_read()+0x1e>
     a6c:	46 b1       	in	r20, 0x06	; 6
     a6e:	66 b1       	in	r22, 0x06	; 6
     a70:	e6 b1       	in	r30, 0x06	; 6
     a72:	06 b1       	in	r16, 0x06	; 6
     a74:	42 98       	cbi	0x08, 2	; 8
     a76:	00 c0       	rjmp	.+0      	; 0xa78 <LCD_read()+0x2a>
     a78:	00 c0       	rjmp	.+0      	; 0xa7a <LCD_read()+0x2c>
     a7a:	42 9a       	sbi	0x08, 2	; 8
     a7c:	00 c0       	rjmp	.+0      	; 0xa7e <LCD_read()+0x30>
     a7e:	00 c0       	rjmp	.+0      	; 0xa80 <LCD_read()+0x32>
     a80:	a6 b1       	in	r26, 0x06	; 6
     a82:	e6 b0       	in	r14, 0x06	; 6
     a84:	c6 b0       	in	r12, 0x06	; 6
     a86:	86 b1       	in	r24, 0x06	; 6
     a88:	42 98       	cbi	0x08, 2	; 8
     a8a:	00 c0       	rjmp	.+0      	; 0xa8c <LCD_read()+0x3e>
     a8c:	00 c0       	rjmp	.+0      	; 0xa8e <LCD_read()+0x40>
     a8e:	27 b1       	in	r18, 0x07	; 7
     a90:	28 67       	ori	r18, 0x78	; 120
     a92:	27 b9       	out	0x07, r18	; 7
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	95 95       	asr	r25
     a98:	87 95       	ror	r24
     a9a:	95 95       	asr	r25
     a9c:	87 95       	ror	r24
     a9e:	95 95       	asr	r25
     aa0:	87 95       	ror	r24
     aa2:	81 70       	andi	r24, 0x01	; 1
     aa4:	50 e0       	ldi	r21, 0x00	; 0
     aa6:	04 2e       	mov	r0, r20
     aa8:	45 2f       	mov	r20, r21
     aaa:	00 0c       	add	r0, r0
     aac:	44 1f       	adc	r20, r20
     aae:	55 0b       	sbc	r21, r21
     ab0:	00 0c       	add	r0, r0
     ab2:	44 1f       	adc	r20, r20
     ab4:	55 1f       	adc	r21, r21
     ab6:	56 95       	lsr	r21
     ab8:	54 2f       	mov	r21, r20
     aba:	44 27       	eor	r20, r20
     abc:	57 95       	ror	r21
     abe:	47 95       	ror	r20
     ac0:	84 2b       	or	r24, r20
     ac2:	70 e0       	ldi	r23, 0x00	; 0
     ac4:	66 0f       	add	r22, r22
     ac6:	77 1f       	adc	r23, r23
     ac8:	60 74       	andi	r22, 0x40	; 64
     aca:	70 70       	andi	r23, 0x00	; 0
     acc:	86 2b       	or	r24, r22
     ace:	f0 e0       	ldi	r31, 0x00	; 0
     ad0:	ee 0f       	add	r30, r30
     ad2:	ff 1f       	adc	r31, r31
     ad4:	e0 72       	andi	r30, 0x20	; 32
     ad6:	f0 70       	andi	r31, 0x00	; 0
     ad8:	8e 2b       	or	r24, r30
     ada:	10 e0       	ldi	r17, 0x00	; 0
     adc:	00 0f       	add	r16, r16
     ade:	11 1f       	adc	r17, r17
     ae0:	00 71       	andi	r16, 0x10	; 16
     ae2:	10 70       	andi	r17, 0x00	; 0
     ae4:	80 2b       	or	r24, r16
     ae6:	b0 e0       	ldi	r27, 0x00	; 0
     ae8:	b6 95       	lsr	r27
     aea:	a7 95       	ror	r26
     aec:	b6 95       	lsr	r27
     aee:	a7 95       	ror	r26
     af0:	b6 95       	lsr	r27
     af2:	a7 95       	ror	r26
     af4:	a8 70       	andi	r26, 0x08	; 8
     af6:	b0 70       	andi	r27, 0x00	; 0
     af8:	8a 2b       	or	r24, r26
     afa:	ff 24       	eor	r15, r15
     afc:	f6 94       	lsr	r15
     afe:	e7 94       	ror	r14
     b00:	f6 94       	lsr	r15
     b02:	e7 94       	ror	r14
     b04:	f6 94       	lsr	r15
     b06:	e7 94       	ror	r14
     b08:	94 e0       	ldi	r25, 0x04	; 4
     b0a:	e9 22       	and	r14, r25
     b0c:	ff 24       	eor	r15, r15
     b0e:	8e 29       	or	r24, r14
     b10:	dd 24       	eor	r13, r13
     b12:	d6 94       	lsr	r13
     b14:	c7 94       	ror	r12
     b16:	d6 94       	lsr	r13
     b18:	c7 94       	ror	r12
     b1a:	d6 94       	lsr	r13
     b1c:	c7 94       	ror	r12
     b1e:	92 e0       	ldi	r25, 0x02	; 2
     b20:	c9 22       	and	r12, r25
     b22:	dd 24       	eor	r13, r13
     b24:	8c 29       	or	r24, r12
     b26:	1f 91       	pop	r17
     b28:	0f 91       	pop	r16
     b2a:	ff 90       	pop	r15
     b2c:	ef 90       	pop	r14
     b2e:	df 90       	pop	r13
     b30:	cf 90       	pop	r12
     b32:	08 95       	ret

00000b34 <LCD_waitNotBusy()>:
     b34:	40 98       	cbi	0x08, 0	; 8
     b36:	41 9a       	sbi	0x08, 1	; 8
     b38:	00 c0       	rjmp	.+0      	; 0xb3a <LCD_waitNotBusy()+0x6>
     b3a:	00 c0       	rjmp	.+0      	; 0xb3c <LCD_waitNotBusy()+0x8>
     b3c:	87 b1       	in	r24, 0x07	; 7
     b3e:	87 78       	andi	r24, 0x87	; 135
     b40:	87 b9       	out	0x07, r24	; 7
     b42:	88 b1       	in	r24, 0x08	; 8
     b44:	87 78       	andi	r24, 0x87	; 135
     b46:	88 b9       	out	0x08, r24	; 8
     b48:	42 9a       	sbi	0x08, 2	; 8
     b4a:	00 c0       	rjmp	.+0      	; 0xb4c <LCD_waitNotBusy()+0x18>
     b4c:	00 c0       	rjmp	.+0      	; 0xb4e <LCD_waitNotBusy()+0x1a>
     b4e:	96 b1       	in	r25, 0x06	; 6
     b50:	86 b1       	in	r24, 0x06	; 6
     b52:	86 b1       	in	r24, 0x06	; 6
     b54:	86 b1       	in	r24, 0x06	; 6
     b56:	42 98       	cbi	0x08, 2	; 8
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <LCD_waitNotBusy()+0x26>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <LCD_waitNotBusy()+0x28>
     b5c:	42 9a       	sbi	0x08, 2	; 8
     b5e:	00 c0       	rjmp	.+0      	; 0xb60 <LCD_waitNotBusy()+0x2c>
     b60:	00 c0       	rjmp	.+0      	; 0xb62 <LCD_waitNotBusy()+0x2e>
     b62:	86 b1       	in	r24, 0x06	; 6
     b64:	86 b1       	in	r24, 0x06	; 6
     b66:	86 b1       	in	r24, 0x06	; 6
     b68:	86 b1       	in	r24, 0x06	; 6
     b6a:	42 98       	cbi	0x08, 2	; 8
     b6c:	00 c0       	rjmp	.+0      	; 0xb6e <LCD_waitNotBusy()+0x3a>
     b6e:	00 c0       	rjmp	.+0      	; 0xb70 <LCD_waitNotBusy()+0x3c>
     b70:	87 b1       	in	r24, 0x07	; 7
     b72:	88 67       	ori	r24, 0x78	; 120
     b74:	87 b9       	out	0x07, r24	; 7
     b76:	92 95       	swap	r25
     b78:	96 95       	lsr	r25
     b7a:	96 95       	lsr	r25
     b7c:	93 70       	andi	r25, 0x03	; 3
     b7e:	90 fd       	sbrc	r25, 0
     b80:	d9 cf       	rjmp	.-78     	; 0xb34 <LCD_waitNotBusy()>
     b82:	08 95       	ret

00000b84 <LCD_readStatus()>:
     b84:	cf 92       	push	r12
     b86:	df 92       	push	r13
     b88:	ef 92       	push	r14
     b8a:	ff 92       	push	r15
     b8c:	0f 93       	push	r16
     b8e:	1f 93       	push	r17
     b90:	40 98       	cbi	0x08, 0	; 8
     b92:	41 9a       	sbi	0x08, 1	; 8
     b94:	00 c0       	rjmp	.+0      	; 0xb96 <LCD_readStatus()+0x12>
     b96:	00 c0       	rjmp	.+0      	; 0xb98 <LCD_readStatus()+0x14>
     b98:	87 b1       	in	r24, 0x07	; 7
     b9a:	87 78       	andi	r24, 0x87	; 135
     b9c:	87 b9       	out	0x07, r24	; 7
     b9e:	88 b1       	in	r24, 0x08	; 8
     ba0:	87 78       	andi	r24, 0x87	; 135
     ba2:	88 b9       	out	0x08, r24	; 8
     ba4:	42 9a       	sbi	0x08, 2	; 8
     ba6:	00 c0       	rjmp	.+0      	; 0xba8 <LCD_readStatus()+0x24>
     ba8:	00 c0       	rjmp	.+0      	; 0xbaa <LCD_readStatus()+0x26>
     baa:	46 b1       	in	r20, 0x06	; 6
     bac:	66 b1       	in	r22, 0x06	; 6
     bae:	e6 b1       	in	r30, 0x06	; 6
     bb0:	06 b1       	in	r16, 0x06	; 6
     bb2:	42 98       	cbi	0x08, 2	; 8
     bb4:	00 c0       	rjmp	.+0      	; 0xbb6 <LCD_readStatus()+0x32>
     bb6:	00 c0       	rjmp	.+0      	; 0xbb8 <LCD_readStatus()+0x34>
     bb8:	42 9a       	sbi	0x08, 2	; 8
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <LCD_readStatus()+0x38>
     bbc:	00 c0       	rjmp	.+0      	; 0xbbe <LCD_readStatus()+0x3a>
     bbe:	a6 b1       	in	r26, 0x06	; 6
     bc0:	e6 b0       	in	r14, 0x06	; 6
     bc2:	c6 b0       	in	r12, 0x06	; 6
     bc4:	86 b1       	in	r24, 0x06	; 6
     bc6:	42 98       	cbi	0x08, 2	; 8
     bc8:	00 c0       	rjmp	.+0      	; 0xbca <LCD_readStatus()+0x46>
     bca:	00 c0       	rjmp	.+0      	; 0xbcc <LCD_readStatus()+0x48>
     bcc:	27 b1       	in	r18, 0x07	; 7
     bce:	28 67       	ori	r18, 0x78	; 120
     bd0:	27 b9       	out	0x07, r18	; 7
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	95 95       	asr	r25
     bd6:	87 95       	ror	r24
     bd8:	95 95       	asr	r25
     bda:	87 95       	ror	r24
     bdc:	95 95       	asr	r25
     bde:	87 95       	ror	r24
     be0:	81 70       	andi	r24, 0x01	; 1
     be2:	50 e0       	ldi	r21, 0x00	; 0
     be4:	04 2e       	mov	r0, r20
     be6:	45 2f       	mov	r20, r21
     be8:	00 0c       	add	r0, r0
     bea:	44 1f       	adc	r20, r20
     bec:	55 0b       	sbc	r21, r21
     bee:	00 0c       	add	r0, r0
     bf0:	44 1f       	adc	r20, r20
     bf2:	55 1f       	adc	r21, r21
     bf4:	56 95       	lsr	r21
     bf6:	54 2f       	mov	r21, r20
     bf8:	44 27       	eor	r20, r20
     bfa:	57 95       	ror	r21
     bfc:	47 95       	ror	r20
     bfe:	84 2b       	or	r24, r20
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	66 0f       	add	r22, r22
     c04:	77 1f       	adc	r23, r23
     c06:	60 74       	andi	r22, 0x40	; 64
     c08:	70 70       	andi	r23, 0x00	; 0
     c0a:	86 2b       	or	r24, r22
     c0c:	f0 e0       	ldi	r31, 0x00	; 0
     c0e:	ee 0f       	add	r30, r30
     c10:	ff 1f       	adc	r31, r31
     c12:	e0 72       	andi	r30, 0x20	; 32
     c14:	f0 70       	andi	r31, 0x00	; 0
     c16:	8e 2b       	or	r24, r30
     c18:	10 e0       	ldi	r17, 0x00	; 0
     c1a:	00 0f       	add	r16, r16
     c1c:	11 1f       	adc	r17, r17
     c1e:	00 71       	andi	r16, 0x10	; 16
     c20:	10 70       	andi	r17, 0x00	; 0
     c22:	80 2b       	or	r24, r16
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	b6 95       	lsr	r27
     c28:	a7 95       	ror	r26
     c2a:	b6 95       	lsr	r27
     c2c:	a7 95       	ror	r26
     c2e:	b6 95       	lsr	r27
     c30:	a7 95       	ror	r26
     c32:	a8 70       	andi	r26, 0x08	; 8
     c34:	b0 70       	andi	r27, 0x00	; 0
     c36:	8a 2b       	or	r24, r26
     c38:	ff 24       	eor	r15, r15
     c3a:	f6 94       	lsr	r15
     c3c:	e7 94       	ror	r14
     c3e:	f6 94       	lsr	r15
     c40:	e7 94       	ror	r14
     c42:	f6 94       	lsr	r15
     c44:	e7 94       	ror	r14
     c46:	94 e0       	ldi	r25, 0x04	; 4
     c48:	e9 22       	and	r14, r25
     c4a:	ff 24       	eor	r15, r15
     c4c:	8e 29       	or	r24, r14
     c4e:	dd 24       	eor	r13, r13
     c50:	d6 94       	lsr	r13
     c52:	c7 94       	ror	r12
     c54:	d6 94       	lsr	r13
     c56:	c7 94       	ror	r12
     c58:	d6 94       	lsr	r13
     c5a:	c7 94       	ror	r12
     c5c:	92 e0       	ldi	r25, 0x02	; 2
     c5e:	c9 22       	and	r12, r25
     c60:	dd 24       	eor	r13, r13
     c62:	8c 29       	or	r24, r12
     c64:	1f 91       	pop	r17
     c66:	0f 91       	pop	r16
     c68:	ff 90       	pop	r15
     c6a:	ef 90       	pop	r14
     c6c:	df 90       	pop	r13
     c6e:	cf 90       	pop	r12
     c70:	08 95       	ret

00000c72 <LCD_readData()>:
     c72:	cf 92       	push	r12
     c74:	df 92       	push	r13
     c76:	ef 92       	push	r14
     c78:	ff 92       	push	r15
     c7a:	0f 93       	push	r16
     c7c:	1f 93       	push	r17
     c7e:	40 9a       	sbi	0x08, 0	; 8
     c80:	41 9a       	sbi	0x08, 1	; 8
     c82:	00 c0       	rjmp	.+0      	; 0xc84 <LCD_readData()+0x12>
     c84:	00 c0       	rjmp	.+0      	; 0xc86 <LCD_readData()+0x14>
     c86:	87 b1       	in	r24, 0x07	; 7
     c88:	87 78       	andi	r24, 0x87	; 135
     c8a:	87 b9       	out	0x07, r24	; 7
     c8c:	88 b1       	in	r24, 0x08	; 8
     c8e:	87 78       	andi	r24, 0x87	; 135
     c90:	88 b9       	out	0x08, r24	; 8
     c92:	42 9a       	sbi	0x08, 2	; 8
     c94:	00 c0       	rjmp	.+0      	; 0xc96 <LCD_readData()+0x24>
     c96:	00 c0       	rjmp	.+0      	; 0xc98 <LCD_readData()+0x26>
     c98:	46 b1       	in	r20, 0x06	; 6
     c9a:	66 b1       	in	r22, 0x06	; 6
     c9c:	e6 b1       	in	r30, 0x06	; 6
     c9e:	06 b1       	in	r16, 0x06	; 6
     ca0:	42 98       	cbi	0x08, 2	; 8
     ca2:	00 c0       	rjmp	.+0      	; 0xca4 <LCD_readData()+0x32>
     ca4:	00 c0       	rjmp	.+0      	; 0xca6 <LCD_readData()+0x34>
     ca6:	42 9a       	sbi	0x08, 2	; 8
     ca8:	00 c0       	rjmp	.+0      	; 0xcaa <LCD_readData()+0x38>
     caa:	00 c0       	rjmp	.+0      	; 0xcac <LCD_readData()+0x3a>
     cac:	a6 b1       	in	r26, 0x06	; 6
     cae:	e6 b0       	in	r14, 0x06	; 6
     cb0:	c6 b0       	in	r12, 0x06	; 6
     cb2:	86 b1       	in	r24, 0x06	; 6
     cb4:	42 98       	cbi	0x08, 2	; 8
     cb6:	00 c0       	rjmp	.+0      	; 0xcb8 <LCD_readData()+0x46>
     cb8:	00 c0       	rjmp	.+0      	; 0xcba <LCD_readData()+0x48>
     cba:	27 b1       	in	r18, 0x07	; 7
     cbc:	28 67       	ori	r18, 0x78	; 120
     cbe:	27 b9       	out	0x07, r18	; 7
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	95 95       	asr	r25
     cc4:	87 95       	ror	r24
     cc6:	95 95       	asr	r25
     cc8:	87 95       	ror	r24
     cca:	95 95       	asr	r25
     ccc:	87 95       	ror	r24
     cce:	81 70       	andi	r24, 0x01	; 1
     cd0:	50 e0       	ldi	r21, 0x00	; 0
     cd2:	04 2e       	mov	r0, r20
     cd4:	45 2f       	mov	r20, r21
     cd6:	00 0c       	add	r0, r0
     cd8:	44 1f       	adc	r20, r20
     cda:	55 0b       	sbc	r21, r21
     cdc:	00 0c       	add	r0, r0
     cde:	44 1f       	adc	r20, r20
     ce0:	55 1f       	adc	r21, r21
     ce2:	56 95       	lsr	r21
     ce4:	54 2f       	mov	r21, r20
     ce6:	44 27       	eor	r20, r20
     ce8:	57 95       	ror	r21
     cea:	47 95       	ror	r20
     cec:	84 2b       	or	r24, r20
     cee:	70 e0       	ldi	r23, 0x00	; 0
     cf0:	66 0f       	add	r22, r22
     cf2:	77 1f       	adc	r23, r23
     cf4:	60 74       	andi	r22, 0x40	; 64
     cf6:	70 70       	andi	r23, 0x00	; 0
     cf8:	86 2b       	or	r24, r22
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	ee 0f       	add	r30, r30
     cfe:	ff 1f       	adc	r31, r31
     d00:	e0 72       	andi	r30, 0x20	; 32
     d02:	f0 70       	andi	r31, 0x00	; 0
     d04:	8e 2b       	or	r24, r30
     d06:	10 e0       	ldi	r17, 0x00	; 0
     d08:	00 0f       	add	r16, r16
     d0a:	11 1f       	adc	r17, r17
     d0c:	00 71       	andi	r16, 0x10	; 16
     d0e:	10 70       	andi	r17, 0x00	; 0
     d10:	80 2b       	or	r24, r16
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	b6 95       	lsr	r27
     d16:	a7 95       	ror	r26
     d18:	b6 95       	lsr	r27
     d1a:	a7 95       	ror	r26
     d1c:	b6 95       	lsr	r27
     d1e:	a7 95       	ror	r26
     d20:	a8 70       	andi	r26, 0x08	; 8
     d22:	b0 70       	andi	r27, 0x00	; 0
     d24:	8a 2b       	or	r24, r26
     d26:	ff 24       	eor	r15, r15
     d28:	f6 94       	lsr	r15
     d2a:	e7 94       	ror	r14
     d2c:	f6 94       	lsr	r15
     d2e:	e7 94       	ror	r14
     d30:	f6 94       	lsr	r15
     d32:	e7 94       	ror	r14
     d34:	94 e0       	ldi	r25, 0x04	; 4
     d36:	e9 22       	and	r14, r25
     d38:	ff 24       	eor	r15, r15
     d3a:	8e 29       	or	r24, r14
     d3c:	dd 24       	eor	r13, r13
     d3e:	d6 94       	lsr	r13
     d40:	c7 94       	ror	r12
     d42:	d6 94       	lsr	r13
     d44:	c7 94       	ror	r12
     d46:	d6 94       	lsr	r13
     d48:	c7 94       	ror	r12
     d4a:	92 e0       	ldi	r25, 0x02	; 2
     d4c:	c9 22       	and	r12, r25
     d4e:	dd 24       	eor	r13, r13
     d50:	8c 29       	or	r24, r12
     d52:	1f 91       	pop	r17
     d54:	0f 91       	pop	r16
     d56:	ff 90       	pop	r15
     d58:	ef 90       	pop	r14
     d5a:	df 90       	pop	r13
     d5c:	cf 90       	pop	r12
     d5e:	08 95       	ret

00000d60 <LCD_writeData(unsigned char)>:
     d60:	38 2f       	mov	r19, r24
     d62:	40 98       	cbi	0x08, 0	; 8
     d64:	41 9a       	sbi	0x08, 1	; 8
     d66:	00 c0       	rjmp	.+0      	; 0xd68 <LCD_writeData(unsigned char)+0x8>
     d68:	00 c0       	rjmp	.+0      	; 0xd6a <LCD_writeData(unsigned char)+0xa>
     d6a:	87 b1       	in	r24, 0x07	; 7
     d6c:	87 78       	andi	r24, 0x87	; 135
     d6e:	87 b9       	out	0x07, r24	; 7
     d70:	88 b1       	in	r24, 0x08	; 8
     d72:	87 78       	andi	r24, 0x87	; 135
     d74:	88 b9       	out	0x08, r24	; 8
     d76:	42 9a       	sbi	0x08, 2	; 8
     d78:	00 c0       	rjmp	.+0      	; 0xd7a <LCD_writeData(unsigned char)+0x1a>
     d7a:	00 c0       	rjmp	.+0      	; 0xd7c <LCD_writeData(unsigned char)+0x1c>
     d7c:	96 b1       	in	r25, 0x06	; 6
     d7e:	86 b1       	in	r24, 0x06	; 6
     d80:	86 b1       	in	r24, 0x06	; 6
     d82:	86 b1       	in	r24, 0x06	; 6
     d84:	42 98       	cbi	0x08, 2	; 8
     d86:	00 c0       	rjmp	.+0      	; 0xd88 <LCD_writeData(unsigned char)+0x28>
     d88:	00 c0       	rjmp	.+0      	; 0xd8a <LCD_writeData(unsigned char)+0x2a>
     d8a:	42 9a       	sbi	0x08, 2	; 8
     d8c:	00 c0       	rjmp	.+0      	; 0xd8e <LCD_writeData(unsigned char)+0x2e>
     d8e:	00 c0       	rjmp	.+0      	; 0xd90 <LCD_writeData(unsigned char)+0x30>
     d90:	86 b1       	in	r24, 0x06	; 6
     d92:	86 b1       	in	r24, 0x06	; 6
     d94:	86 b1       	in	r24, 0x06	; 6
     d96:	86 b1       	in	r24, 0x06	; 6
     d98:	42 98       	cbi	0x08, 2	; 8
     d9a:	00 c0       	rjmp	.+0      	; 0xd9c <LCD_writeData(unsigned char)+0x3c>
     d9c:	00 c0       	rjmp	.+0      	; 0xd9e <LCD_writeData(unsigned char)+0x3e>
     d9e:	87 b1       	in	r24, 0x07	; 7
     da0:	88 67       	ori	r24, 0x78	; 120
     da2:	87 b9       	out	0x07, r24	; 7
     da4:	92 95       	swap	r25
     da6:	96 95       	lsr	r25
     da8:	96 95       	lsr	r25
     daa:	93 70       	andi	r25, 0x03	; 3
     dac:	90 fd       	sbrc	r25, 0
     dae:	d9 cf       	rjmp	.-78     	; 0xd62 <LCD_writeData(unsigned char)+0x2>
     db0:	40 9a       	sbi	0x08, 0	; 8
     db2:	41 98       	cbi	0x08, 1	; 8
     db4:	00 c0       	rjmp	.+0      	; 0xdb6 <LCD_writeData(unsigned char)+0x56>
     db6:	00 c0       	rjmp	.+0      	; 0xdb8 <LCD_writeData(unsigned char)+0x58>
     db8:	42 9a       	sbi	0x08, 2	; 8
     dba:	28 b1       	in	r18, 0x08	; 8
     dbc:	43 2f       	mov	r20, r19
     dbe:	50 e0       	ldi	r21, 0x00	; 0
     dc0:	33 1f       	adc	r19, r19
     dc2:	33 27       	eor	r19, r19
     dc4:	33 1f       	adc	r19, r19
     dc6:	32 95       	swap	r19
     dc8:	33 0f       	add	r19, r19
     dca:	33 0f       	add	r19, r19
     dcc:	30 7c       	andi	r19, 0xC0	; 192
     dce:	ca 01       	movw	r24, r20
     dd0:	96 95       	lsr	r25
     dd2:	87 95       	ror	r24
     dd4:	80 72       	andi	r24, 0x20	; 32
     dd6:	90 70       	andi	r25, 0x00	; 0
     dd8:	38 2b       	or	r19, r24
     dda:	27 78       	andi	r18, 0x87	; 135
     ddc:	32 2b       	or	r19, r18
     dde:	ca 01       	movw	r24, r20
     de0:	96 95       	lsr	r25
     de2:	87 95       	ror	r24
     de4:	80 71       	andi	r24, 0x10	; 16
     de6:	90 70       	andi	r25, 0x00	; 0
     de8:	38 2b       	or	r19, r24
     dea:	ca 01       	movw	r24, r20
     dec:	96 95       	lsr	r25
     dee:	87 95       	ror	r24
     df0:	88 70       	andi	r24, 0x08	; 8
     df2:	90 70       	andi	r25, 0x00	; 0
     df4:	38 2b       	or	r19, r24
     df6:	38 b9       	out	0x08, r19	; 8
     df8:	00 c0       	rjmp	.+0      	; 0xdfa <LCD_writeData(unsigned char)+0x9a>
     dfa:	00 c0       	rjmp	.+0      	; 0xdfc <LCD_writeData(unsigned char)+0x9c>
     dfc:	42 98       	cbi	0x08, 2	; 8
     dfe:	00 c0       	rjmp	.+0      	; 0xe00 <LCD_writeData(unsigned char)+0xa0>
     e00:	00 c0       	rjmp	.+0      	; 0xe02 <LCD_writeData(unsigned char)+0xa2>
     e02:	42 9a       	sbi	0x08, 2	; 8
     e04:	28 b1       	in	r18, 0x08	; 8
     e06:	ca 01       	movw	r24, r20
     e08:	81 70       	andi	r24, 0x01	; 1
     e0a:	90 70       	andi	r25, 0x00	; 0
     e0c:	88 0f       	add	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	88 0f       	add	r24, r24
     e12:	99 1f       	adc	r25, r25
     e14:	88 0f       	add	r24, r24
     e16:	99 1f       	adc	r25, r25
     e18:	27 78       	andi	r18, 0x87	; 135
     e1a:	28 2b       	or	r18, r24
     e1c:	ca 01       	movw	r24, r20
     e1e:	88 0f       	add	r24, r24
     e20:	99 1f       	adc	r25, r25
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	88 0f       	add	r24, r24
     e28:	99 1f       	adc	r25, r25
     e2a:	80 74       	andi	r24, 0x40	; 64
     e2c:	90 70       	andi	r25, 0x00	; 0
     e2e:	28 2b       	or	r18, r24
     e30:	44 0f       	add	r20, r20
     e32:	55 1f       	adc	r21, r21
     e34:	44 0f       	add	r20, r20
     e36:	55 1f       	adc	r21, r21
     e38:	44 0f       	add	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	ca 01       	movw	r24, r20
     e3e:	80 72       	andi	r24, 0x20	; 32
     e40:	90 70       	andi	r25, 0x00	; 0
     e42:	28 2b       	or	r18, r24
     e44:	40 71       	andi	r20, 0x10	; 16
     e46:	50 70       	andi	r21, 0x00	; 0
     e48:	24 2b       	or	r18, r20
     e4a:	28 b9       	out	0x08, r18	; 8
     e4c:	00 c0       	rjmp	.+0      	; 0xe4e <LCD_writeData(unsigned char)+0xee>
     e4e:	00 c0       	rjmp	.+0      	; 0xe50 <LCD_writeData(unsigned char)+0xf0>
     e50:	42 98       	cbi	0x08, 2	; 8
     e52:	00 c0       	rjmp	.+0      	; 0xe54 <LCD_writeData(unsigned char)+0xf4>
     e54:	00 c0       	rjmp	.+0      	; 0xe56 <LCD_writeData(unsigned char)+0xf6>
     e56:	08 95       	ret

00000e58 <LCD_isBusy()>:
     e58:	40 98       	cbi	0x08, 0	; 8
     e5a:	41 9a       	sbi	0x08, 1	; 8
     e5c:	00 c0       	rjmp	.+0      	; 0xe5e <LCD_isBusy()+0x6>
     e5e:	00 c0       	rjmp	.+0      	; 0xe60 <LCD_isBusy()+0x8>
     e60:	87 b1       	in	r24, 0x07	; 7
     e62:	87 78       	andi	r24, 0x87	; 135
     e64:	87 b9       	out	0x07, r24	; 7
     e66:	88 b1       	in	r24, 0x08	; 8
     e68:	87 78       	andi	r24, 0x87	; 135
     e6a:	88 b9       	out	0x08, r24	; 8
     e6c:	42 9a       	sbi	0x08, 2	; 8
     e6e:	00 c0       	rjmp	.+0      	; 0xe70 <LCD_isBusy()+0x18>
     e70:	00 c0       	rjmp	.+0      	; 0xe72 <LCD_isBusy()+0x1a>
     e72:	96 b1       	in	r25, 0x06	; 6
     e74:	86 b1       	in	r24, 0x06	; 6
     e76:	86 b1       	in	r24, 0x06	; 6
     e78:	86 b1       	in	r24, 0x06	; 6
     e7a:	42 98       	cbi	0x08, 2	; 8
     e7c:	00 c0       	rjmp	.+0      	; 0xe7e <LCD_isBusy()+0x26>
     e7e:	00 c0       	rjmp	.+0      	; 0xe80 <LCD_isBusy()+0x28>
     e80:	42 9a       	sbi	0x08, 2	; 8
     e82:	00 c0       	rjmp	.+0      	; 0xe84 <LCD_isBusy()+0x2c>
     e84:	00 c0       	rjmp	.+0      	; 0xe86 <LCD_isBusy()+0x2e>
     e86:	86 b1       	in	r24, 0x06	; 6
     e88:	86 b1       	in	r24, 0x06	; 6
     e8a:	86 b1       	in	r24, 0x06	; 6
     e8c:	86 b1       	in	r24, 0x06	; 6
     e8e:	42 98       	cbi	0x08, 2	; 8
     e90:	00 c0       	rjmp	.+0      	; 0xe92 <LCD_isBusy()+0x3a>
     e92:	00 c0       	rjmp	.+0      	; 0xe94 <LCD_isBusy()+0x3c>
     e94:	87 b1       	in	r24, 0x07	; 7
     e96:	88 67       	ori	r24, 0x78	; 120
     e98:	87 b9       	out	0x07, r24	; 7
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	92 95       	swap	r25
     e9e:	96 95       	lsr	r25
     ea0:	96 95       	lsr	r25
     ea2:	93 70       	andi	r25, 0x03	; 3
     ea4:	90 ff       	sbrs	r25, 0
     ea6:	08 95       	ret
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	08 95       	ret

00000eac <LCD_writeInstr(unsigned char)>:
     eac:	38 2f       	mov	r19, r24
     eae:	40 98       	cbi	0x08, 0	; 8
     eb0:	41 9a       	sbi	0x08, 1	; 8
     eb2:	00 c0       	rjmp	.+0      	; 0xeb4 <LCD_writeInstr(unsigned char)+0x8>
     eb4:	00 c0       	rjmp	.+0      	; 0xeb6 <LCD_writeInstr(unsigned char)+0xa>
     eb6:	87 b1       	in	r24, 0x07	; 7
     eb8:	87 78       	andi	r24, 0x87	; 135
     eba:	87 b9       	out	0x07, r24	; 7
     ebc:	88 b1       	in	r24, 0x08	; 8
     ebe:	87 78       	andi	r24, 0x87	; 135
     ec0:	88 b9       	out	0x08, r24	; 8
     ec2:	42 9a       	sbi	0x08, 2	; 8
     ec4:	00 c0       	rjmp	.+0      	; 0xec6 <LCD_writeInstr(unsigned char)+0x1a>
     ec6:	00 c0       	rjmp	.+0      	; 0xec8 <LCD_writeInstr(unsigned char)+0x1c>
     ec8:	96 b1       	in	r25, 0x06	; 6
     eca:	86 b1       	in	r24, 0x06	; 6
     ecc:	86 b1       	in	r24, 0x06	; 6
     ece:	86 b1       	in	r24, 0x06	; 6
     ed0:	42 98       	cbi	0x08, 2	; 8
     ed2:	00 c0       	rjmp	.+0      	; 0xed4 <LCD_writeInstr(unsigned char)+0x28>
     ed4:	00 c0       	rjmp	.+0      	; 0xed6 <LCD_writeInstr(unsigned char)+0x2a>
     ed6:	42 9a       	sbi	0x08, 2	; 8
     ed8:	00 c0       	rjmp	.+0      	; 0xeda <LCD_writeInstr(unsigned char)+0x2e>
     eda:	00 c0       	rjmp	.+0      	; 0xedc <LCD_writeInstr(unsigned char)+0x30>
     edc:	86 b1       	in	r24, 0x06	; 6
     ede:	86 b1       	in	r24, 0x06	; 6
     ee0:	86 b1       	in	r24, 0x06	; 6
     ee2:	86 b1       	in	r24, 0x06	; 6
     ee4:	42 98       	cbi	0x08, 2	; 8
     ee6:	00 c0       	rjmp	.+0      	; 0xee8 <LCD_writeInstr(unsigned char)+0x3c>
     ee8:	00 c0       	rjmp	.+0      	; 0xeea <LCD_writeInstr(unsigned char)+0x3e>
     eea:	87 b1       	in	r24, 0x07	; 7
     eec:	88 67       	ori	r24, 0x78	; 120
     eee:	87 b9       	out	0x07, r24	; 7
     ef0:	92 95       	swap	r25
     ef2:	96 95       	lsr	r25
     ef4:	96 95       	lsr	r25
     ef6:	93 70       	andi	r25, 0x03	; 3
     ef8:	90 fd       	sbrc	r25, 0
     efa:	d9 cf       	rjmp	.-78     	; 0xeae <LCD_writeInstr(unsigned char)+0x2>
     efc:	40 98       	cbi	0x08, 0	; 8
     efe:	41 98       	cbi	0x08, 1	; 8
     f00:	00 c0       	rjmp	.+0      	; 0xf02 <LCD_writeInstr(unsigned char)+0x56>
     f02:	00 c0       	rjmp	.+0      	; 0xf04 <LCD_writeInstr(unsigned char)+0x58>
     f04:	42 9a       	sbi	0x08, 2	; 8
     f06:	28 b1       	in	r18, 0x08	; 8
     f08:	43 2f       	mov	r20, r19
     f0a:	50 e0       	ldi	r21, 0x00	; 0
     f0c:	33 1f       	adc	r19, r19
     f0e:	33 27       	eor	r19, r19
     f10:	33 1f       	adc	r19, r19
     f12:	32 95       	swap	r19
     f14:	33 0f       	add	r19, r19
     f16:	33 0f       	add	r19, r19
     f18:	30 7c       	andi	r19, 0xC0	; 192
     f1a:	ca 01       	movw	r24, r20
     f1c:	96 95       	lsr	r25
     f1e:	87 95       	ror	r24
     f20:	80 72       	andi	r24, 0x20	; 32
     f22:	90 70       	andi	r25, 0x00	; 0
     f24:	38 2b       	or	r19, r24
     f26:	27 78       	andi	r18, 0x87	; 135
     f28:	32 2b       	or	r19, r18
     f2a:	ca 01       	movw	r24, r20
     f2c:	96 95       	lsr	r25
     f2e:	87 95       	ror	r24
     f30:	80 71       	andi	r24, 0x10	; 16
     f32:	90 70       	andi	r25, 0x00	; 0
     f34:	38 2b       	or	r19, r24
     f36:	ca 01       	movw	r24, r20
     f38:	96 95       	lsr	r25
     f3a:	87 95       	ror	r24
     f3c:	88 70       	andi	r24, 0x08	; 8
     f3e:	90 70       	andi	r25, 0x00	; 0
     f40:	38 2b       	or	r19, r24
     f42:	38 b9       	out	0x08, r19	; 8
     f44:	00 c0       	rjmp	.+0      	; 0xf46 <LCD_writeInstr(unsigned char)+0x9a>
     f46:	00 c0       	rjmp	.+0      	; 0xf48 <LCD_writeInstr(unsigned char)+0x9c>
     f48:	42 98       	cbi	0x08, 2	; 8
     f4a:	00 c0       	rjmp	.+0      	; 0xf4c <LCD_writeInstr(unsigned char)+0xa0>
     f4c:	00 c0       	rjmp	.+0      	; 0xf4e <LCD_writeInstr(unsigned char)+0xa2>
     f4e:	42 9a       	sbi	0x08, 2	; 8
     f50:	28 b1       	in	r18, 0x08	; 8
     f52:	ca 01       	movw	r24, r20
     f54:	81 70       	andi	r24, 0x01	; 1
     f56:	90 70       	andi	r25, 0x00	; 0
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	88 0f       	add	r24, r24
     f5e:	99 1f       	adc	r25, r25
     f60:	88 0f       	add	r24, r24
     f62:	99 1f       	adc	r25, r25
     f64:	27 78       	andi	r18, 0x87	; 135
     f66:	28 2b       	or	r18, r24
     f68:	ca 01       	movw	r24, r20
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	88 0f       	add	r24, r24
     f70:	99 1f       	adc	r25, r25
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	80 74       	andi	r24, 0x40	; 64
     f78:	90 70       	andi	r25, 0x00	; 0
     f7a:	28 2b       	or	r18, r24
     f7c:	44 0f       	add	r20, r20
     f7e:	55 1f       	adc	r21, r21
     f80:	44 0f       	add	r20, r20
     f82:	55 1f       	adc	r21, r21
     f84:	44 0f       	add	r20, r20
     f86:	55 1f       	adc	r21, r21
     f88:	ca 01       	movw	r24, r20
     f8a:	80 72       	andi	r24, 0x20	; 32
     f8c:	90 70       	andi	r25, 0x00	; 0
     f8e:	28 2b       	or	r18, r24
     f90:	40 71       	andi	r20, 0x10	; 16
     f92:	50 70       	andi	r21, 0x00	; 0
     f94:	24 2b       	or	r18, r20
     f96:	28 b9       	out	0x08, r18	; 8
     f98:	00 c0       	rjmp	.+0      	; 0xf9a <LCD_writeInstr(unsigned char)+0xee>
     f9a:	00 c0       	rjmp	.+0      	; 0xf9c <LCD_writeInstr(unsigned char)+0xf0>
     f9c:	42 98       	cbi	0x08, 2	; 8
     f9e:	00 c0       	rjmp	.+0      	; 0xfa0 <LCD_writeInstr(unsigned char)+0xf4>
     fa0:	00 c0       	rjmp	.+0      	; 0xfa2 <LCD_writeInstr(unsigned char)+0xf6>
     fa2:	08 95       	ret

00000fa4 <LCD_print(char const*)>:
     fa4:	fc 01       	movw	r30, r24
     fa6:	30 81       	ld	r19, Z
     fa8:	33 23       	and	r19, r19
     faa:	09 f4       	brne	.+2      	; 0xfae <LCD_print(char const*)+0xa>
     fac:	7f c0       	rjmp	.+254    	; 0x10ac <LCD_print(char const*)+0x108>
     fae:	31 96       	adiw	r30, 0x01	; 1
     fb0:	40 98       	cbi	0x08, 0	; 8
     fb2:	41 9a       	sbi	0x08, 1	; 8
     fb4:	00 c0       	rjmp	.+0      	; 0xfb6 <LCD_print(char const*)+0x12>
     fb6:	00 c0       	rjmp	.+0      	; 0xfb8 <LCD_print(char const*)+0x14>
     fb8:	87 b1       	in	r24, 0x07	; 7
     fba:	87 78       	andi	r24, 0x87	; 135
     fbc:	87 b9       	out	0x07, r24	; 7
     fbe:	88 b1       	in	r24, 0x08	; 8
     fc0:	87 78       	andi	r24, 0x87	; 135
     fc2:	88 b9       	out	0x08, r24	; 8
     fc4:	42 9a       	sbi	0x08, 2	; 8
     fc6:	00 c0       	rjmp	.+0      	; 0xfc8 <LCD_print(char const*)+0x24>
     fc8:	00 c0       	rjmp	.+0      	; 0xfca <LCD_print(char const*)+0x26>
     fca:	96 b1       	in	r25, 0x06	; 6
     fcc:	86 b1       	in	r24, 0x06	; 6
     fce:	86 b1       	in	r24, 0x06	; 6
     fd0:	86 b1       	in	r24, 0x06	; 6
     fd2:	42 98       	cbi	0x08, 2	; 8
     fd4:	00 c0       	rjmp	.+0      	; 0xfd6 <LCD_print(char const*)+0x32>
     fd6:	00 c0       	rjmp	.+0      	; 0xfd8 <LCD_print(char const*)+0x34>
     fd8:	42 9a       	sbi	0x08, 2	; 8
     fda:	00 c0       	rjmp	.+0      	; 0xfdc <LCD_print(char const*)+0x38>
     fdc:	00 c0       	rjmp	.+0      	; 0xfde <LCD_print(char const*)+0x3a>
     fde:	86 b1       	in	r24, 0x06	; 6
     fe0:	86 b1       	in	r24, 0x06	; 6
     fe2:	86 b1       	in	r24, 0x06	; 6
     fe4:	86 b1       	in	r24, 0x06	; 6
     fe6:	42 98       	cbi	0x08, 2	; 8
     fe8:	00 c0       	rjmp	.+0      	; 0xfea <LCD_print(char const*)+0x46>
     fea:	00 c0       	rjmp	.+0      	; 0xfec <LCD_print(char const*)+0x48>
     fec:	87 b1       	in	r24, 0x07	; 7
     fee:	88 67       	ori	r24, 0x78	; 120
     ff0:	87 b9       	out	0x07, r24	; 7
     ff2:	92 95       	swap	r25
     ff4:	96 95       	lsr	r25
     ff6:	96 95       	lsr	r25
     ff8:	93 70       	andi	r25, 0x03	; 3
     ffa:	90 fd       	sbrc	r25, 0
     ffc:	d9 cf       	rjmp	.-78     	; 0xfb0 <LCD_print(char const*)+0xc>
     ffe:	40 9a       	sbi	0x08, 0	; 8
    1000:	41 98       	cbi	0x08, 1	; 8
    1002:	00 c0       	rjmp	.+0      	; 0x1004 <LCD_print(char const*)+0x60>
    1004:	00 c0       	rjmp	.+0      	; 0x1006 <LCD_print(char const*)+0x62>
    1006:	42 9a       	sbi	0x08, 2	; 8
    1008:	28 b1       	in	r18, 0x08	; 8
    100a:	43 2f       	mov	r20, r19
    100c:	50 e0       	ldi	r21, 0x00	; 0
    100e:	33 1f       	adc	r19, r19
    1010:	33 27       	eor	r19, r19
    1012:	33 1f       	adc	r19, r19
    1014:	32 95       	swap	r19
    1016:	33 0f       	add	r19, r19
    1018:	33 0f       	add	r19, r19
    101a:	30 7c       	andi	r19, 0xC0	; 192
    101c:	ca 01       	movw	r24, r20
    101e:	96 95       	lsr	r25
    1020:	87 95       	ror	r24
    1022:	80 72       	andi	r24, 0x20	; 32
    1024:	90 70       	andi	r25, 0x00	; 0
    1026:	38 2b       	or	r19, r24
    1028:	27 78       	andi	r18, 0x87	; 135
    102a:	32 2b       	or	r19, r18
    102c:	ca 01       	movw	r24, r20
    102e:	96 95       	lsr	r25
    1030:	87 95       	ror	r24
    1032:	80 71       	andi	r24, 0x10	; 16
    1034:	90 70       	andi	r25, 0x00	; 0
    1036:	38 2b       	or	r19, r24
    1038:	ca 01       	movw	r24, r20
    103a:	96 95       	lsr	r25
    103c:	87 95       	ror	r24
    103e:	88 70       	andi	r24, 0x08	; 8
    1040:	90 70       	andi	r25, 0x00	; 0
    1042:	38 2b       	or	r19, r24
    1044:	38 b9       	out	0x08, r19	; 8
    1046:	00 c0       	rjmp	.+0      	; 0x1048 <LCD_print(char const*)+0xa4>
    1048:	00 c0       	rjmp	.+0      	; 0x104a <LCD_print(char const*)+0xa6>
    104a:	42 98       	cbi	0x08, 2	; 8
    104c:	00 c0       	rjmp	.+0      	; 0x104e <LCD_print(char const*)+0xaa>
    104e:	00 c0       	rjmp	.+0      	; 0x1050 <LCD_print(char const*)+0xac>
    1050:	42 9a       	sbi	0x08, 2	; 8
    1052:	28 b1       	in	r18, 0x08	; 8
    1054:	ca 01       	movw	r24, r20
    1056:	81 70       	andi	r24, 0x01	; 1
    1058:	90 70       	andi	r25, 0x00	; 0
    105a:	88 0f       	add	r24, r24
    105c:	99 1f       	adc	r25, r25
    105e:	88 0f       	add	r24, r24
    1060:	99 1f       	adc	r25, r25
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	27 78       	andi	r18, 0x87	; 135
    1068:	28 2b       	or	r18, r24
    106a:	ca 01       	movw	r24, r20
    106c:	88 0f       	add	r24, r24
    106e:	99 1f       	adc	r25, r25
    1070:	88 0f       	add	r24, r24
    1072:	99 1f       	adc	r25, r25
    1074:	88 0f       	add	r24, r24
    1076:	99 1f       	adc	r25, r25
    1078:	80 74       	andi	r24, 0x40	; 64
    107a:	90 70       	andi	r25, 0x00	; 0
    107c:	28 2b       	or	r18, r24
    107e:	44 0f       	add	r20, r20
    1080:	55 1f       	adc	r21, r21
    1082:	44 0f       	add	r20, r20
    1084:	55 1f       	adc	r21, r21
    1086:	44 0f       	add	r20, r20
    1088:	55 1f       	adc	r21, r21
    108a:	ca 01       	movw	r24, r20
    108c:	80 72       	andi	r24, 0x20	; 32
    108e:	90 70       	andi	r25, 0x00	; 0
    1090:	28 2b       	or	r18, r24
    1092:	40 71       	andi	r20, 0x10	; 16
    1094:	50 70       	andi	r21, 0x00	; 0
    1096:	24 2b       	or	r18, r20
    1098:	28 b9       	out	0x08, r18	; 8
    109a:	00 c0       	rjmp	.+0      	; 0x109c <LCD_print(char const*)+0xf8>
    109c:	00 c0       	rjmp	.+0      	; 0x109e <LCD_print(char const*)+0xfa>
    109e:	42 98       	cbi	0x08, 2	; 8
    10a0:	00 c0       	rjmp	.+0      	; 0x10a2 <LCD_print(char const*)+0xfe>
    10a2:	00 c0       	rjmp	.+0      	; 0x10a4 <LCD_print(char const*)+0x100>
    10a4:	30 81       	ld	r19, Z
    10a6:	33 23       	and	r19, r19
    10a8:	09 f0       	breq	.+2      	; 0x10ac <LCD_print(char const*)+0x108>
    10aa:	81 cf       	rjmp	.-254    	; 0xfae <LCD_print(char const*)+0xa>
    10ac:	08 95       	ret

000010ae <LCD_putChar(char)>:
    10ae:	38 2f       	mov	r19, r24
    10b0:	40 98       	cbi	0x08, 0	; 8
    10b2:	41 9a       	sbi	0x08, 1	; 8
    10b4:	00 c0       	rjmp	.+0      	; 0x10b6 <LCD_putChar(char)+0x8>
    10b6:	00 c0       	rjmp	.+0      	; 0x10b8 <LCD_putChar(char)+0xa>
    10b8:	87 b1       	in	r24, 0x07	; 7
    10ba:	87 78       	andi	r24, 0x87	; 135
    10bc:	87 b9       	out	0x07, r24	; 7
    10be:	88 b1       	in	r24, 0x08	; 8
    10c0:	87 78       	andi	r24, 0x87	; 135
    10c2:	88 b9       	out	0x08, r24	; 8
    10c4:	42 9a       	sbi	0x08, 2	; 8
    10c6:	00 c0       	rjmp	.+0      	; 0x10c8 <LCD_putChar(char)+0x1a>
    10c8:	00 c0       	rjmp	.+0      	; 0x10ca <LCD_putChar(char)+0x1c>
    10ca:	96 b1       	in	r25, 0x06	; 6
    10cc:	86 b1       	in	r24, 0x06	; 6
    10ce:	86 b1       	in	r24, 0x06	; 6
    10d0:	86 b1       	in	r24, 0x06	; 6
    10d2:	42 98       	cbi	0x08, 2	; 8
    10d4:	00 c0       	rjmp	.+0      	; 0x10d6 <LCD_putChar(char)+0x28>
    10d6:	00 c0       	rjmp	.+0      	; 0x10d8 <LCD_putChar(char)+0x2a>
    10d8:	42 9a       	sbi	0x08, 2	; 8
    10da:	00 c0       	rjmp	.+0      	; 0x10dc <LCD_putChar(char)+0x2e>
    10dc:	00 c0       	rjmp	.+0      	; 0x10de <LCD_putChar(char)+0x30>
    10de:	86 b1       	in	r24, 0x06	; 6
    10e0:	86 b1       	in	r24, 0x06	; 6
    10e2:	86 b1       	in	r24, 0x06	; 6
    10e4:	86 b1       	in	r24, 0x06	; 6
    10e6:	42 98       	cbi	0x08, 2	; 8
    10e8:	00 c0       	rjmp	.+0      	; 0x10ea <LCD_putChar(char)+0x3c>
    10ea:	00 c0       	rjmp	.+0      	; 0x10ec <LCD_putChar(char)+0x3e>
    10ec:	87 b1       	in	r24, 0x07	; 7
    10ee:	88 67       	ori	r24, 0x78	; 120
    10f0:	87 b9       	out	0x07, r24	; 7
    10f2:	92 95       	swap	r25
    10f4:	96 95       	lsr	r25
    10f6:	96 95       	lsr	r25
    10f8:	93 70       	andi	r25, 0x03	; 3
    10fa:	90 fd       	sbrc	r25, 0
    10fc:	d9 cf       	rjmp	.-78     	; 0x10b0 <LCD_putChar(char)+0x2>
    10fe:	40 9a       	sbi	0x08, 0	; 8
    1100:	41 98       	cbi	0x08, 1	; 8
    1102:	00 c0       	rjmp	.+0      	; 0x1104 <LCD_putChar(char)+0x56>
    1104:	00 c0       	rjmp	.+0      	; 0x1106 <LCD_putChar(char)+0x58>
    1106:	42 9a       	sbi	0x08, 2	; 8
    1108:	28 b1       	in	r18, 0x08	; 8
    110a:	43 2f       	mov	r20, r19
    110c:	50 e0       	ldi	r21, 0x00	; 0
    110e:	33 1f       	adc	r19, r19
    1110:	33 27       	eor	r19, r19
    1112:	33 1f       	adc	r19, r19
    1114:	32 95       	swap	r19
    1116:	33 0f       	add	r19, r19
    1118:	33 0f       	add	r19, r19
    111a:	30 7c       	andi	r19, 0xC0	; 192
    111c:	ca 01       	movw	r24, r20
    111e:	96 95       	lsr	r25
    1120:	87 95       	ror	r24
    1122:	80 72       	andi	r24, 0x20	; 32
    1124:	90 70       	andi	r25, 0x00	; 0
    1126:	38 2b       	or	r19, r24
    1128:	27 78       	andi	r18, 0x87	; 135
    112a:	32 2b       	or	r19, r18
    112c:	ca 01       	movw	r24, r20
    112e:	96 95       	lsr	r25
    1130:	87 95       	ror	r24
    1132:	80 71       	andi	r24, 0x10	; 16
    1134:	90 70       	andi	r25, 0x00	; 0
    1136:	38 2b       	or	r19, r24
    1138:	ca 01       	movw	r24, r20
    113a:	96 95       	lsr	r25
    113c:	87 95       	ror	r24
    113e:	88 70       	andi	r24, 0x08	; 8
    1140:	90 70       	andi	r25, 0x00	; 0
    1142:	38 2b       	or	r19, r24
    1144:	38 b9       	out	0x08, r19	; 8
    1146:	00 c0       	rjmp	.+0      	; 0x1148 <LCD_putChar(char)+0x9a>
    1148:	00 c0       	rjmp	.+0      	; 0x114a <LCD_putChar(char)+0x9c>
    114a:	42 98       	cbi	0x08, 2	; 8
    114c:	00 c0       	rjmp	.+0      	; 0x114e <LCD_putChar(char)+0xa0>
    114e:	00 c0       	rjmp	.+0      	; 0x1150 <LCD_putChar(char)+0xa2>
    1150:	42 9a       	sbi	0x08, 2	; 8
    1152:	28 b1       	in	r18, 0x08	; 8
    1154:	ca 01       	movw	r24, r20
    1156:	81 70       	andi	r24, 0x01	; 1
    1158:	90 70       	andi	r25, 0x00	; 0
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	88 0f       	add	r24, r24
    1160:	99 1f       	adc	r25, r25
    1162:	88 0f       	add	r24, r24
    1164:	99 1f       	adc	r25, r25
    1166:	27 78       	andi	r18, 0x87	; 135
    1168:	28 2b       	or	r18, r24
    116a:	ca 01       	movw	r24, r20
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	88 0f       	add	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	88 0f       	add	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	80 74       	andi	r24, 0x40	; 64
    117a:	90 70       	andi	r25, 0x00	; 0
    117c:	28 2b       	or	r18, r24
    117e:	44 0f       	add	r20, r20
    1180:	55 1f       	adc	r21, r21
    1182:	44 0f       	add	r20, r20
    1184:	55 1f       	adc	r21, r21
    1186:	44 0f       	add	r20, r20
    1188:	55 1f       	adc	r21, r21
    118a:	ca 01       	movw	r24, r20
    118c:	80 72       	andi	r24, 0x20	; 32
    118e:	90 70       	andi	r25, 0x00	; 0
    1190:	28 2b       	or	r18, r24
    1192:	40 71       	andi	r20, 0x10	; 16
    1194:	50 70       	andi	r21, 0x00	; 0
    1196:	24 2b       	or	r18, r20
    1198:	28 b9       	out	0x08, r18	; 8
    119a:	00 c0       	rjmp	.+0      	; 0x119c <LCD_putChar(char)+0xee>
    119c:	00 c0       	rjmp	.+0      	; 0x119e <LCD_putChar(char)+0xf0>
    119e:	42 98       	cbi	0x08, 2	; 8
    11a0:	00 c0       	rjmp	.+0      	; 0x11a2 <LCD_putChar(char)+0xf4>
    11a2:	00 c0       	rjmp	.+0      	; 0x11a4 <LCD_putChar(char)+0xf6>
    11a4:	08 95       	ret

000011a6 <LCD_putCharAt(unsigned char, char)>:
    11a6:	38 2f       	mov	r19, r24
    11a8:	30 58       	subi	r19, 0x80	; 128
    11aa:	40 98       	cbi	0x08, 0	; 8
    11ac:	41 9a       	sbi	0x08, 1	; 8
    11ae:	00 c0       	rjmp	.+0      	; 0x11b0 <LCD_putCharAt(unsigned char, char)+0xa>
    11b0:	00 c0       	rjmp	.+0      	; 0x11b2 <LCD_putCharAt(unsigned char, char)+0xc>
    11b2:	87 b1       	in	r24, 0x07	; 7
    11b4:	87 78       	andi	r24, 0x87	; 135
    11b6:	87 b9       	out	0x07, r24	; 7
    11b8:	88 b1       	in	r24, 0x08	; 8
    11ba:	87 78       	andi	r24, 0x87	; 135
    11bc:	88 b9       	out	0x08, r24	; 8
    11be:	42 9a       	sbi	0x08, 2	; 8
    11c0:	00 c0       	rjmp	.+0      	; 0x11c2 <LCD_putCharAt(unsigned char, char)+0x1c>
    11c2:	00 c0       	rjmp	.+0      	; 0x11c4 <LCD_putCharAt(unsigned char, char)+0x1e>
    11c4:	96 b1       	in	r25, 0x06	; 6
    11c6:	86 b1       	in	r24, 0x06	; 6
    11c8:	86 b1       	in	r24, 0x06	; 6
    11ca:	86 b1       	in	r24, 0x06	; 6
    11cc:	42 98       	cbi	0x08, 2	; 8
    11ce:	00 c0       	rjmp	.+0      	; 0x11d0 <LCD_putCharAt(unsigned char, char)+0x2a>
    11d0:	00 c0       	rjmp	.+0      	; 0x11d2 <LCD_putCharAt(unsigned char, char)+0x2c>
    11d2:	42 9a       	sbi	0x08, 2	; 8
    11d4:	00 c0       	rjmp	.+0      	; 0x11d6 <LCD_putCharAt(unsigned char, char)+0x30>
    11d6:	00 c0       	rjmp	.+0      	; 0x11d8 <LCD_putCharAt(unsigned char, char)+0x32>
    11d8:	86 b1       	in	r24, 0x06	; 6
    11da:	86 b1       	in	r24, 0x06	; 6
    11dc:	86 b1       	in	r24, 0x06	; 6
    11de:	86 b1       	in	r24, 0x06	; 6
    11e0:	42 98       	cbi	0x08, 2	; 8
    11e2:	00 c0       	rjmp	.+0      	; 0x11e4 <LCD_putCharAt(unsigned char, char)+0x3e>
    11e4:	00 c0       	rjmp	.+0      	; 0x11e6 <LCD_putCharAt(unsigned char, char)+0x40>
    11e6:	87 b1       	in	r24, 0x07	; 7
    11e8:	88 67       	ori	r24, 0x78	; 120
    11ea:	87 b9       	out	0x07, r24	; 7
    11ec:	92 95       	swap	r25
    11ee:	96 95       	lsr	r25
    11f0:	96 95       	lsr	r25
    11f2:	93 70       	andi	r25, 0x03	; 3
    11f4:	90 fd       	sbrc	r25, 0
    11f6:	d9 cf       	rjmp	.-78     	; 0x11aa <LCD_putCharAt(unsigned char, char)+0x4>
    11f8:	40 98       	cbi	0x08, 0	; 8
    11fa:	41 98       	cbi	0x08, 1	; 8
    11fc:	00 c0       	rjmp	.+0      	; 0x11fe <LCD_putCharAt(unsigned char, char)+0x58>
    11fe:	00 c0       	rjmp	.+0      	; 0x1200 <LCD_putCharAt(unsigned char, char)+0x5a>
    1200:	42 9a       	sbi	0x08, 2	; 8
    1202:	28 b1       	in	r18, 0x08	; 8
    1204:	43 2f       	mov	r20, r19
    1206:	50 e0       	ldi	r21, 0x00	; 0
    1208:	33 1f       	adc	r19, r19
    120a:	33 27       	eor	r19, r19
    120c:	33 1f       	adc	r19, r19
    120e:	32 95       	swap	r19
    1210:	33 0f       	add	r19, r19
    1212:	33 0f       	add	r19, r19
    1214:	30 7c       	andi	r19, 0xC0	; 192
    1216:	ca 01       	movw	r24, r20
    1218:	96 95       	lsr	r25
    121a:	87 95       	ror	r24
    121c:	80 72       	andi	r24, 0x20	; 32
    121e:	90 70       	andi	r25, 0x00	; 0
    1220:	38 2b       	or	r19, r24
    1222:	27 78       	andi	r18, 0x87	; 135
    1224:	32 2b       	or	r19, r18
    1226:	ca 01       	movw	r24, r20
    1228:	96 95       	lsr	r25
    122a:	87 95       	ror	r24
    122c:	80 71       	andi	r24, 0x10	; 16
    122e:	90 70       	andi	r25, 0x00	; 0
    1230:	38 2b       	or	r19, r24
    1232:	ca 01       	movw	r24, r20
    1234:	96 95       	lsr	r25
    1236:	87 95       	ror	r24
    1238:	88 70       	andi	r24, 0x08	; 8
    123a:	90 70       	andi	r25, 0x00	; 0
    123c:	38 2b       	or	r19, r24
    123e:	38 b9       	out	0x08, r19	; 8
    1240:	00 c0       	rjmp	.+0      	; 0x1242 <LCD_putCharAt(unsigned char, char)+0x9c>
    1242:	00 c0       	rjmp	.+0      	; 0x1244 <LCD_putCharAt(unsigned char, char)+0x9e>
    1244:	42 98       	cbi	0x08, 2	; 8
    1246:	00 c0       	rjmp	.+0      	; 0x1248 <LCD_putCharAt(unsigned char, char)+0xa2>
    1248:	00 c0       	rjmp	.+0      	; 0x124a <LCD_putCharAt(unsigned char, char)+0xa4>
    124a:	42 9a       	sbi	0x08, 2	; 8
    124c:	28 b1       	in	r18, 0x08	; 8
    124e:	ca 01       	movw	r24, r20
    1250:	81 70       	andi	r24, 0x01	; 1
    1252:	90 70       	andi	r25, 0x00	; 0
    1254:	88 0f       	add	r24, r24
    1256:	99 1f       	adc	r25, r25
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	88 0f       	add	r24, r24
    125e:	99 1f       	adc	r25, r25
    1260:	27 78       	andi	r18, 0x87	; 135
    1262:	28 2b       	or	r18, r24
    1264:	ca 01       	movw	r24, r20
    1266:	88 0f       	add	r24, r24
    1268:	99 1f       	adc	r25, r25
    126a:	88 0f       	add	r24, r24
    126c:	99 1f       	adc	r25, r25
    126e:	88 0f       	add	r24, r24
    1270:	99 1f       	adc	r25, r25
    1272:	80 74       	andi	r24, 0x40	; 64
    1274:	90 70       	andi	r25, 0x00	; 0
    1276:	28 2b       	or	r18, r24
    1278:	44 0f       	add	r20, r20
    127a:	55 1f       	adc	r21, r21
    127c:	44 0f       	add	r20, r20
    127e:	55 1f       	adc	r21, r21
    1280:	44 0f       	add	r20, r20
    1282:	55 1f       	adc	r21, r21
    1284:	ca 01       	movw	r24, r20
    1286:	80 72       	andi	r24, 0x20	; 32
    1288:	90 70       	andi	r25, 0x00	; 0
    128a:	28 2b       	or	r18, r24
    128c:	40 71       	andi	r20, 0x10	; 16
    128e:	50 70       	andi	r21, 0x00	; 0
    1290:	24 2b       	or	r18, r20
    1292:	28 b9       	out	0x08, r18	; 8
    1294:	00 c0       	rjmp	.+0      	; 0x1296 <LCD_putCharAt(unsigned char, char)+0xf0>
    1296:	00 c0       	rjmp	.+0      	; 0x1298 <LCD_putCharAt(unsigned char, char)+0xf2>
    1298:	42 98       	cbi	0x08, 2	; 8
    129a:	00 c0       	rjmp	.+0      	; 0x129c <LCD_putCharAt(unsigned char, char)+0xf6>
    129c:	00 c0       	rjmp	.+0      	; 0x129e <LCD_putCharAt(unsigned char, char)+0xf8>
    129e:	40 98       	cbi	0x08, 0	; 8
    12a0:	41 9a       	sbi	0x08, 1	; 8
    12a2:	00 c0       	rjmp	.+0      	; 0x12a4 <LCD_putCharAt(unsigned char, char)+0xfe>
    12a4:	00 c0       	rjmp	.+0      	; 0x12a6 <LCD_putCharAt(unsigned char, char)+0x100>
    12a6:	87 b1       	in	r24, 0x07	; 7
    12a8:	87 78       	andi	r24, 0x87	; 135
    12aa:	87 b9       	out	0x07, r24	; 7
    12ac:	88 b1       	in	r24, 0x08	; 8
    12ae:	87 78       	andi	r24, 0x87	; 135
    12b0:	88 b9       	out	0x08, r24	; 8
    12b2:	42 9a       	sbi	0x08, 2	; 8
    12b4:	00 c0       	rjmp	.+0      	; 0x12b6 <LCD_putCharAt(unsigned char, char)+0x110>
    12b6:	00 c0       	rjmp	.+0      	; 0x12b8 <LCD_putCharAt(unsigned char, char)+0x112>
    12b8:	96 b1       	in	r25, 0x06	; 6
    12ba:	86 b1       	in	r24, 0x06	; 6
    12bc:	86 b1       	in	r24, 0x06	; 6
    12be:	86 b1       	in	r24, 0x06	; 6
    12c0:	42 98       	cbi	0x08, 2	; 8
    12c2:	00 c0       	rjmp	.+0      	; 0x12c4 <LCD_putCharAt(unsigned char, char)+0x11e>
    12c4:	00 c0       	rjmp	.+0      	; 0x12c6 <LCD_putCharAt(unsigned char, char)+0x120>
    12c6:	42 9a       	sbi	0x08, 2	; 8
    12c8:	00 c0       	rjmp	.+0      	; 0x12ca <LCD_putCharAt(unsigned char, char)+0x124>
    12ca:	00 c0       	rjmp	.+0      	; 0x12cc <LCD_putCharAt(unsigned char, char)+0x126>
    12cc:	86 b1       	in	r24, 0x06	; 6
    12ce:	86 b1       	in	r24, 0x06	; 6
    12d0:	86 b1       	in	r24, 0x06	; 6
    12d2:	86 b1       	in	r24, 0x06	; 6
    12d4:	42 98       	cbi	0x08, 2	; 8
    12d6:	00 c0       	rjmp	.+0      	; 0x12d8 <LCD_putCharAt(unsigned char, char)+0x132>
    12d8:	00 c0       	rjmp	.+0      	; 0x12da <LCD_putCharAt(unsigned char, char)+0x134>
    12da:	87 b1       	in	r24, 0x07	; 7
    12dc:	88 67       	ori	r24, 0x78	; 120
    12de:	87 b9       	out	0x07, r24	; 7
    12e0:	92 95       	swap	r25
    12e2:	96 95       	lsr	r25
    12e4:	96 95       	lsr	r25
    12e6:	93 70       	andi	r25, 0x03	; 3
    12e8:	90 fd       	sbrc	r25, 0
    12ea:	d9 cf       	rjmp	.-78     	; 0x129e <LCD_putCharAt(unsigned char, char)+0xf8>
    12ec:	40 9a       	sbi	0x08, 0	; 8
    12ee:	41 98       	cbi	0x08, 1	; 8
    12f0:	00 c0       	rjmp	.+0      	; 0x12f2 <LCD_putCharAt(unsigned char, char)+0x14c>
    12f2:	00 c0       	rjmp	.+0      	; 0x12f4 <LCD_putCharAt(unsigned char, char)+0x14e>
    12f4:	42 9a       	sbi	0x08, 2	; 8
    12f6:	28 b1       	in	r18, 0x08	; 8
    12f8:	46 2f       	mov	r20, r22
    12fa:	50 e0       	ldi	r21, 0x00	; 0
    12fc:	66 1f       	adc	r22, r22
    12fe:	66 27       	eor	r22, r22
    1300:	66 1f       	adc	r22, r22
    1302:	62 95       	swap	r22
    1304:	66 0f       	add	r22, r22
    1306:	66 0f       	add	r22, r22
    1308:	60 7c       	andi	r22, 0xC0	; 192
    130a:	ca 01       	movw	r24, r20
    130c:	96 95       	lsr	r25
    130e:	87 95       	ror	r24
    1310:	80 72       	andi	r24, 0x20	; 32
    1312:	90 70       	andi	r25, 0x00	; 0
    1314:	68 2b       	or	r22, r24
    1316:	27 78       	andi	r18, 0x87	; 135
    1318:	62 2b       	or	r22, r18
    131a:	ca 01       	movw	r24, r20
    131c:	96 95       	lsr	r25
    131e:	87 95       	ror	r24
    1320:	80 71       	andi	r24, 0x10	; 16
    1322:	90 70       	andi	r25, 0x00	; 0
    1324:	68 2b       	or	r22, r24
    1326:	ca 01       	movw	r24, r20
    1328:	96 95       	lsr	r25
    132a:	87 95       	ror	r24
    132c:	88 70       	andi	r24, 0x08	; 8
    132e:	90 70       	andi	r25, 0x00	; 0
    1330:	68 2b       	or	r22, r24
    1332:	68 b9       	out	0x08, r22	; 8
    1334:	00 c0       	rjmp	.+0      	; 0x1336 <LCD_putCharAt(unsigned char, char)+0x190>
    1336:	00 c0       	rjmp	.+0      	; 0x1338 <LCD_putCharAt(unsigned char, char)+0x192>
    1338:	42 98       	cbi	0x08, 2	; 8
    133a:	00 c0       	rjmp	.+0      	; 0x133c <LCD_putCharAt(unsigned char, char)+0x196>
    133c:	00 c0       	rjmp	.+0      	; 0x133e <LCD_putCharAt(unsigned char, char)+0x198>
    133e:	42 9a       	sbi	0x08, 2	; 8
    1340:	28 b1       	in	r18, 0x08	; 8
    1342:	ca 01       	movw	r24, r20
    1344:	81 70       	andi	r24, 0x01	; 1
    1346:	90 70       	andi	r25, 0x00	; 0
    1348:	88 0f       	add	r24, r24
    134a:	99 1f       	adc	r25, r25
    134c:	88 0f       	add	r24, r24
    134e:	99 1f       	adc	r25, r25
    1350:	88 0f       	add	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	27 78       	andi	r18, 0x87	; 135
    1356:	28 2b       	or	r18, r24
    1358:	ca 01       	movw	r24, r20
    135a:	88 0f       	add	r24, r24
    135c:	99 1f       	adc	r25, r25
    135e:	88 0f       	add	r24, r24
    1360:	99 1f       	adc	r25, r25
    1362:	88 0f       	add	r24, r24
    1364:	99 1f       	adc	r25, r25
    1366:	80 74       	andi	r24, 0x40	; 64
    1368:	90 70       	andi	r25, 0x00	; 0
    136a:	28 2b       	or	r18, r24
    136c:	44 0f       	add	r20, r20
    136e:	55 1f       	adc	r21, r21
    1370:	44 0f       	add	r20, r20
    1372:	55 1f       	adc	r21, r21
    1374:	44 0f       	add	r20, r20
    1376:	55 1f       	adc	r21, r21
    1378:	ca 01       	movw	r24, r20
    137a:	80 72       	andi	r24, 0x20	; 32
    137c:	90 70       	andi	r25, 0x00	; 0
    137e:	28 2b       	or	r18, r24
    1380:	40 71       	andi	r20, 0x10	; 16
    1382:	50 70       	andi	r21, 0x00	; 0
    1384:	24 2b       	or	r18, r20
    1386:	28 b9       	out	0x08, r18	; 8
    1388:	00 c0       	rjmp	.+0      	; 0x138a <LCD_putCharAt(unsigned char, char)+0x1e4>
    138a:	00 c0       	rjmp	.+0      	; 0x138c <LCD_putCharAt(unsigned char, char)+0x1e6>
    138c:	42 98       	cbi	0x08, 2	; 8
    138e:	00 c0       	rjmp	.+0      	; 0x1390 <LCD_putCharAt(unsigned char, char)+0x1ea>
    1390:	00 c0       	rjmp	.+0      	; 0x1392 <LCD_putCharAt(unsigned char, char)+0x1ec>
    1392:	08 95       	ret

00001394 <LCD_printAt(unsigned char, char const*)>:
    1394:	fb 01       	movw	r30, r22
    1396:	38 2f       	mov	r19, r24
    1398:	30 68       	ori	r19, 0x80	; 128
    139a:	40 98       	cbi	0x08, 0	; 8
    139c:	41 9a       	sbi	0x08, 1	; 8
    139e:	00 c0       	rjmp	.+0      	; 0x13a0 <LCD_printAt(unsigned char, char const*)+0xc>
    13a0:	00 c0       	rjmp	.+0      	; 0x13a2 <LCD_printAt(unsigned char, char const*)+0xe>
    13a2:	87 b1       	in	r24, 0x07	; 7
    13a4:	87 78       	andi	r24, 0x87	; 135
    13a6:	87 b9       	out	0x07, r24	; 7
    13a8:	88 b1       	in	r24, 0x08	; 8
    13aa:	87 78       	andi	r24, 0x87	; 135
    13ac:	88 b9       	out	0x08, r24	; 8
    13ae:	42 9a       	sbi	0x08, 2	; 8
    13b0:	00 c0       	rjmp	.+0      	; 0x13b2 <LCD_printAt(unsigned char, char const*)+0x1e>
    13b2:	00 c0       	rjmp	.+0      	; 0x13b4 <LCD_printAt(unsigned char, char const*)+0x20>
    13b4:	96 b1       	in	r25, 0x06	; 6
    13b6:	86 b1       	in	r24, 0x06	; 6
    13b8:	86 b1       	in	r24, 0x06	; 6
    13ba:	86 b1       	in	r24, 0x06	; 6
    13bc:	42 98       	cbi	0x08, 2	; 8
    13be:	00 c0       	rjmp	.+0      	; 0x13c0 <LCD_printAt(unsigned char, char const*)+0x2c>
    13c0:	00 c0       	rjmp	.+0      	; 0x13c2 <LCD_printAt(unsigned char, char const*)+0x2e>
    13c2:	42 9a       	sbi	0x08, 2	; 8
    13c4:	00 c0       	rjmp	.+0      	; 0x13c6 <LCD_printAt(unsigned char, char const*)+0x32>
    13c6:	00 c0       	rjmp	.+0      	; 0x13c8 <LCD_printAt(unsigned char, char const*)+0x34>
    13c8:	86 b1       	in	r24, 0x06	; 6
    13ca:	86 b1       	in	r24, 0x06	; 6
    13cc:	86 b1       	in	r24, 0x06	; 6
    13ce:	86 b1       	in	r24, 0x06	; 6
    13d0:	42 98       	cbi	0x08, 2	; 8
    13d2:	00 c0       	rjmp	.+0      	; 0x13d4 <LCD_printAt(unsigned char, char const*)+0x40>
    13d4:	00 c0       	rjmp	.+0      	; 0x13d6 <LCD_printAt(unsigned char, char const*)+0x42>
    13d6:	87 b1       	in	r24, 0x07	; 7
    13d8:	88 67       	ori	r24, 0x78	; 120
    13da:	87 b9       	out	0x07, r24	; 7
    13dc:	92 95       	swap	r25
    13de:	96 95       	lsr	r25
    13e0:	96 95       	lsr	r25
    13e2:	93 70       	andi	r25, 0x03	; 3
    13e4:	90 fd       	sbrc	r25, 0
    13e6:	d9 cf       	rjmp	.-78     	; 0x139a <LCD_printAt(unsigned char, char const*)+0x6>
    13e8:	40 98       	cbi	0x08, 0	; 8
    13ea:	41 98       	cbi	0x08, 1	; 8
    13ec:	00 c0       	rjmp	.+0      	; 0x13ee <LCD_printAt(unsigned char, char const*)+0x5a>
    13ee:	00 c0       	rjmp	.+0      	; 0x13f0 <LCD_printAt(unsigned char, char const*)+0x5c>
    13f0:	42 9a       	sbi	0x08, 2	; 8
    13f2:	28 b1       	in	r18, 0x08	; 8
    13f4:	43 2f       	mov	r20, r19
    13f6:	50 e0       	ldi	r21, 0x00	; 0
    13f8:	33 1f       	adc	r19, r19
    13fa:	33 27       	eor	r19, r19
    13fc:	33 1f       	adc	r19, r19
    13fe:	32 95       	swap	r19
    1400:	33 0f       	add	r19, r19
    1402:	33 0f       	add	r19, r19
    1404:	30 7c       	andi	r19, 0xC0	; 192
    1406:	ca 01       	movw	r24, r20
    1408:	96 95       	lsr	r25
    140a:	87 95       	ror	r24
    140c:	80 72       	andi	r24, 0x20	; 32
    140e:	90 70       	andi	r25, 0x00	; 0
    1410:	38 2b       	or	r19, r24
    1412:	27 78       	andi	r18, 0x87	; 135
    1414:	32 2b       	or	r19, r18
    1416:	ca 01       	movw	r24, r20
    1418:	96 95       	lsr	r25
    141a:	87 95       	ror	r24
    141c:	80 71       	andi	r24, 0x10	; 16
    141e:	90 70       	andi	r25, 0x00	; 0
    1420:	38 2b       	or	r19, r24
    1422:	ca 01       	movw	r24, r20
    1424:	96 95       	lsr	r25
    1426:	87 95       	ror	r24
    1428:	88 70       	andi	r24, 0x08	; 8
    142a:	90 70       	andi	r25, 0x00	; 0
    142c:	38 2b       	or	r19, r24
    142e:	38 b9       	out	0x08, r19	; 8
    1430:	00 c0       	rjmp	.+0      	; 0x1432 <LCD_printAt(unsigned char, char const*)+0x9e>
    1432:	00 c0       	rjmp	.+0      	; 0x1434 <LCD_printAt(unsigned char, char const*)+0xa0>
    1434:	42 98       	cbi	0x08, 2	; 8
    1436:	00 c0       	rjmp	.+0      	; 0x1438 <LCD_printAt(unsigned char, char const*)+0xa4>
    1438:	00 c0       	rjmp	.+0      	; 0x143a <LCD_printAt(unsigned char, char const*)+0xa6>
    143a:	42 9a       	sbi	0x08, 2	; 8
    143c:	28 b1       	in	r18, 0x08	; 8
    143e:	ca 01       	movw	r24, r20
    1440:	81 70       	andi	r24, 0x01	; 1
    1442:	90 70       	andi	r25, 0x00	; 0
    1444:	88 0f       	add	r24, r24
    1446:	99 1f       	adc	r25, r25
    1448:	88 0f       	add	r24, r24
    144a:	99 1f       	adc	r25, r25
    144c:	88 0f       	add	r24, r24
    144e:	99 1f       	adc	r25, r25
    1450:	27 78       	andi	r18, 0x87	; 135
    1452:	28 2b       	or	r18, r24
    1454:	ca 01       	movw	r24, r20
    1456:	88 0f       	add	r24, r24
    1458:	99 1f       	adc	r25, r25
    145a:	88 0f       	add	r24, r24
    145c:	99 1f       	adc	r25, r25
    145e:	88 0f       	add	r24, r24
    1460:	99 1f       	adc	r25, r25
    1462:	80 74       	andi	r24, 0x40	; 64
    1464:	90 70       	andi	r25, 0x00	; 0
    1466:	28 2b       	or	r18, r24
    1468:	44 0f       	add	r20, r20
    146a:	55 1f       	adc	r21, r21
    146c:	44 0f       	add	r20, r20
    146e:	55 1f       	adc	r21, r21
    1470:	44 0f       	add	r20, r20
    1472:	55 1f       	adc	r21, r21
    1474:	ca 01       	movw	r24, r20
    1476:	80 72       	andi	r24, 0x20	; 32
    1478:	90 70       	andi	r25, 0x00	; 0
    147a:	28 2b       	or	r18, r24
    147c:	40 71       	andi	r20, 0x10	; 16
    147e:	50 70       	andi	r21, 0x00	; 0
    1480:	24 2b       	or	r18, r20
    1482:	28 b9       	out	0x08, r18	; 8
    1484:	00 c0       	rjmp	.+0      	; 0x1486 <LCD_printAt(unsigned char, char const*)+0xf2>
    1486:	00 c0       	rjmp	.+0      	; 0x1488 <LCD_printAt(unsigned char, char const*)+0xf4>
    1488:	42 98       	cbi	0x08, 2	; 8
    148a:	00 c0       	rjmp	.+0      	; 0x148c <LCD_printAt(unsigned char, char const*)+0xf8>
    148c:	00 c0       	rjmp	.+0      	; 0x148e <LCD_printAt(unsigned char, char const*)+0xfa>
    148e:	30 81       	ld	r19, Z
    1490:	33 23       	and	r19, r19
    1492:	51 f1       	breq	.+84     	; 0x14e8 <LCD_printAt(unsigned char, char const*)+0x154>
    1494:	31 96       	adiw	r30, 0x01	; 1
    1496:	40 98       	cbi	0x08, 0	; 8
    1498:	41 9a       	sbi	0x08, 1	; 8
    149a:	00 c0       	rjmp	.+0      	; 0x149c <LCD_printAt(unsigned char, char const*)+0x108>
    149c:	00 c0       	rjmp	.+0      	; 0x149e <LCD_printAt(unsigned char, char const*)+0x10a>
    149e:	87 b1       	in	r24, 0x07	; 7
    14a0:	87 78       	andi	r24, 0x87	; 135
    14a2:	87 b9       	out	0x07, r24	; 7
    14a4:	88 b1       	in	r24, 0x08	; 8
    14a6:	87 78       	andi	r24, 0x87	; 135
    14a8:	88 b9       	out	0x08, r24	; 8
    14aa:	42 9a       	sbi	0x08, 2	; 8
    14ac:	00 c0       	rjmp	.+0      	; 0x14ae <LCD_printAt(unsigned char, char const*)+0x11a>
    14ae:	00 c0       	rjmp	.+0      	; 0x14b0 <LCD_printAt(unsigned char, char const*)+0x11c>
    14b0:	96 b1       	in	r25, 0x06	; 6
    14b2:	86 b1       	in	r24, 0x06	; 6
    14b4:	86 b1       	in	r24, 0x06	; 6
    14b6:	86 b1       	in	r24, 0x06	; 6
    14b8:	42 98       	cbi	0x08, 2	; 8
    14ba:	00 c0       	rjmp	.+0      	; 0x14bc <LCD_printAt(unsigned char, char const*)+0x128>
    14bc:	00 c0       	rjmp	.+0      	; 0x14be <LCD_printAt(unsigned char, char const*)+0x12a>
    14be:	42 9a       	sbi	0x08, 2	; 8
    14c0:	00 c0       	rjmp	.+0      	; 0x14c2 <LCD_printAt(unsigned char, char const*)+0x12e>
    14c2:	00 c0       	rjmp	.+0      	; 0x14c4 <LCD_printAt(unsigned char, char const*)+0x130>
    14c4:	86 b1       	in	r24, 0x06	; 6
    14c6:	86 b1       	in	r24, 0x06	; 6
    14c8:	86 b1       	in	r24, 0x06	; 6
    14ca:	86 b1       	in	r24, 0x06	; 6
    14cc:	42 98       	cbi	0x08, 2	; 8
    14ce:	00 c0       	rjmp	.+0      	; 0x14d0 <LCD_printAt(unsigned char, char const*)+0x13c>
    14d0:	00 c0       	rjmp	.+0      	; 0x14d2 <LCD_printAt(unsigned char, char const*)+0x13e>
    14d2:	87 b1       	in	r24, 0x07	; 7
    14d4:	88 67       	ori	r24, 0x78	; 120
    14d6:	87 b9       	out	0x07, r24	; 7
    14d8:	92 95       	swap	r25
    14da:	96 95       	lsr	r25
    14dc:	96 95       	lsr	r25
    14de:	93 70       	andi	r25, 0x03	; 3
    14e0:	90 fd       	sbrc	r25, 0
    14e2:	d9 cf       	rjmp	.-78     	; 0x1496 <LCD_printAt(unsigned char, char const*)+0x102>
    14e4:	40 9a       	sbi	0x08, 0	; 8
    14e6:	81 cf       	rjmp	.-254    	; 0x13ea <LCD_printAt(unsigned char, char const*)+0x56>
    14e8:	08 95       	ret

000014ea <LCD_init()>:
    14ea:	87 b1       	in	r24, 0x07	; 7
    14ec:	88 67       	ori	r24, 0x78	; 120
    14ee:	87 b9       	out	0x07, r24	; 7
    14f0:	87 b1       	in	r24, 0x07	; 7
    14f2:	87 60       	ori	r24, 0x07	; 7
    14f4:	87 b9       	out	0x07, r24	; 7
    14f6:	40 98       	cbi	0x08, 0	; 8
    14f8:	41 98       	cbi	0x08, 1	; 8
    14fa:	00 c0       	rjmp	.+0      	; 0x14fc <LCD_init()+0x12>
    14fc:	00 c0       	rjmp	.+0      	; 0x14fe <LCD_init()+0x14>
    14fe:	42 9a       	sbi	0x08, 2	; 8
    1500:	88 b1       	in	r24, 0x08	; 8
    1502:	87 78       	andi	r24, 0x87	; 135
    1504:	80 61       	ori	r24, 0x10	; 16
    1506:	88 b9       	out	0x08, r24	; 8
    1508:	00 c0       	rjmp	.+0      	; 0x150a <LCD_init()+0x20>
    150a:	00 c0       	rjmp	.+0      	; 0x150c <LCD_init()+0x22>
    150c:	42 98       	cbi	0x08, 2	; 8
    150e:	00 c0       	rjmp	.+0      	; 0x1510 <LCD_init()+0x26>
    1510:	00 c0       	rjmp	.+0      	; 0x1512 <LCD_init()+0x28>
    1512:	40 98       	cbi	0x08, 0	; 8
    1514:	41 9a       	sbi	0x08, 1	; 8
    1516:	00 c0       	rjmp	.+0      	; 0x1518 <LCD_init()+0x2e>
    1518:	00 c0       	rjmp	.+0      	; 0x151a <LCD_init()+0x30>
    151a:	87 b1       	in	r24, 0x07	; 7
    151c:	87 78       	andi	r24, 0x87	; 135
    151e:	87 b9       	out	0x07, r24	; 7
    1520:	88 b1       	in	r24, 0x08	; 8
    1522:	87 78       	andi	r24, 0x87	; 135
    1524:	88 b9       	out	0x08, r24	; 8
    1526:	42 9a       	sbi	0x08, 2	; 8
    1528:	00 c0       	rjmp	.+0      	; 0x152a <LCD_init()+0x40>
    152a:	00 c0       	rjmp	.+0      	; 0x152c <LCD_init()+0x42>
    152c:	96 b1       	in	r25, 0x06	; 6
    152e:	86 b1       	in	r24, 0x06	; 6
    1530:	86 b1       	in	r24, 0x06	; 6
    1532:	86 b1       	in	r24, 0x06	; 6
    1534:	42 98       	cbi	0x08, 2	; 8
    1536:	00 c0       	rjmp	.+0      	; 0x1538 <LCD_init()+0x4e>
    1538:	00 c0       	rjmp	.+0      	; 0x153a <LCD_init()+0x50>
    153a:	42 9a       	sbi	0x08, 2	; 8
    153c:	00 c0       	rjmp	.+0      	; 0x153e <LCD_init()+0x54>
    153e:	00 c0       	rjmp	.+0      	; 0x1540 <LCD_init()+0x56>
    1540:	86 b1       	in	r24, 0x06	; 6
    1542:	86 b1       	in	r24, 0x06	; 6
    1544:	86 b1       	in	r24, 0x06	; 6
    1546:	86 b1       	in	r24, 0x06	; 6
    1548:	42 98       	cbi	0x08, 2	; 8
    154a:	00 c0       	rjmp	.+0      	; 0x154c <LCD_init()+0x62>
    154c:	00 c0       	rjmp	.+0      	; 0x154e <LCD_init()+0x64>
    154e:	87 b1       	in	r24, 0x07	; 7
    1550:	88 67       	ori	r24, 0x78	; 120
    1552:	87 b9       	out	0x07, r24	; 7
    1554:	92 95       	swap	r25
    1556:	96 95       	lsr	r25
    1558:	96 95       	lsr	r25
    155a:	93 70       	andi	r25, 0x03	; 3
    155c:	90 fd       	sbrc	r25, 0
    155e:	d9 cf       	rjmp	.-78     	; 0x1512 <LCD_init()+0x28>
    1560:	40 98       	cbi	0x08, 0	; 8
    1562:	41 98       	cbi	0x08, 1	; 8
    1564:	00 c0       	rjmp	.+0      	; 0x1566 <LCD_init()+0x7c>
    1566:	00 c0       	rjmp	.+0      	; 0x1568 <LCD_init()+0x7e>
    1568:	42 9a       	sbi	0x08, 2	; 8
    156a:	88 b1       	in	r24, 0x08	; 8
    156c:	87 78       	andi	r24, 0x87	; 135
    156e:	80 61       	ori	r24, 0x10	; 16
    1570:	88 b9       	out	0x08, r24	; 8
    1572:	00 c0       	rjmp	.+0      	; 0x1574 <LCD_init()+0x8a>
    1574:	00 c0       	rjmp	.+0      	; 0x1576 <LCD_init()+0x8c>
    1576:	42 98       	cbi	0x08, 2	; 8
    1578:	00 c0       	rjmp	.+0      	; 0x157a <LCD_init()+0x90>
    157a:	00 c0       	rjmp	.+0      	; 0x157c <LCD_init()+0x92>
    157c:	42 9a       	sbi	0x08, 2	; 8
    157e:	88 b1       	in	r24, 0x08	; 8
    1580:	87 78       	andi	r24, 0x87	; 135
    1582:	80 64       	ori	r24, 0x40	; 64
    1584:	88 b9       	out	0x08, r24	; 8
    1586:	00 c0       	rjmp	.+0      	; 0x1588 <LCD_init()+0x9e>
    1588:	00 c0       	rjmp	.+0      	; 0x158a <LCD_init()+0xa0>
    158a:	42 98       	cbi	0x08, 2	; 8
    158c:	00 c0       	rjmp	.+0      	; 0x158e <LCD_init()+0xa4>
    158e:	00 c0       	rjmp	.+0      	; 0x1590 <LCD_init()+0xa6>
    1590:	40 98       	cbi	0x08, 0	; 8
    1592:	41 9a       	sbi	0x08, 1	; 8
    1594:	00 c0       	rjmp	.+0      	; 0x1596 <LCD_init()+0xac>
    1596:	00 c0       	rjmp	.+0      	; 0x1598 <LCD_init()+0xae>
    1598:	87 b1       	in	r24, 0x07	; 7
    159a:	87 78       	andi	r24, 0x87	; 135
    159c:	87 b9       	out	0x07, r24	; 7
    159e:	88 b1       	in	r24, 0x08	; 8
    15a0:	87 78       	andi	r24, 0x87	; 135
    15a2:	88 b9       	out	0x08, r24	; 8
    15a4:	42 9a       	sbi	0x08, 2	; 8
    15a6:	00 c0       	rjmp	.+0      	; 0x15a8 <LCD_init()+0xbe>
    15a8:	00 c0       	rjmp	.+0      	; 0x15aa <LCD_init()+0xc0>
    15aa:	96 b1       	in	r25, 0x06	; 6
    15ac:	86 b1       	in	r24, 0x06	; 6
    15ae:	86 b1       	in	r24, 0x06	; 6
    15b0:	86 b1       	in	r24, 0x06	; 6
    15b2:	42 98       	cbi	0x08, 2	; 8
    15b4:	00 c0       	rjmp	.+0      	; 0x15b6 <LCD_init()+0xcc>
    15b6:	00 c0       	rjmp	.+0      	; 0x15b8 <LCD_init()+0xce>
    15b8:	42 9a       	sbi	0x08, 2	; 8
    15ba:	00 c0       	rjmp	.+0      	; 0x15bc <LCD_init()+0xd2>
    15bc:	00 c0       	rjmp	.+0      	; 0x15be <LCD_init()+0xd4>
    15be:	86 b1       	in	r24, 0x06	; 6
    15c0:	86 b1       	in	r24, 0x06	; 6
    15c2:	86 b1       	in	r24, 0x06	; 6
    15c4:	86 b1       	in	r24, 0x06	; 6
    15c6:	42 98       	cbi	0x08, 2	; 8
    15c8:	00 c0       	rjmp	.+0      	; 0x15ca <LCD_init()+0xe0>
    15ca:	00 c0       	rjmp	.+0      	; 0x15cc <LCD_init()+0xe2>
    15cc:	87 b1       	in	r24, 0x07	; 7
    15ce:	88 67       	ori	r24, 0x78	; 120
    15d0:	87 b9       	out	0x07, r24	; 7
    15d2:	92 95       	swap	r25
    15d4:	96 95       	lsr	r25
    15d6:	96 95       	lsr	r25
    15d8:	93 70       	andi	r25, 0x03	; 3
    15da:	90 fd       	sbrc	r25, 0
    15dc:	d9 cf       	rjmp	.-78     	; 0x1590 <LCD_init()+0xa6>
    15de:	40 98       	cbi	0x08, 0	; 8
    15e0:	41 98       	cbi	0x08, 1	; 8
    15e2:	00 c0       	rjmp	.+0      	; 0x15e4 <LCD_init()+0xfa>
    15e4:	00 c0       	rjmp	.+0      	; 0x15e6 <LCD_init()+0xfc>
    15e6:	42 9a       	sbi	0x08, 2	; 8
    15e8:	88 b1       	in	r24, 0x08	; 8
    15ea:	87 78       	andi	r24, 0x87	; 135
    15ec:	88 b9       	out	0x08, r24	; 8
    15ee:	00 c0       	rjmp	.+0      	; 0x15f0 <LCD_init()+0x106>
    15f0:	00 c0       	rjmp	.+0      	; 0x15f2 <LCD_init()+0x108>
    15f2:	42 98       	cbi	0x08, 2	; 8
    15f4:	00 c0       	rjmp	.+0      	; 0x15f6 <LCD_init()+0x10c>
    15f6:	00 c0       	rjmp	.+0      	; 0x15f8 <LCD_init()+0x10e>
    15f8:	42 9a       	sbi	0x08, 2	; 8
    15fa:	88 b1       	in	r24, 0x08	; 8
    15fc:	87 78       	andi	r24, 0x87	; 135
    15fe:	80 66       	ori	r24, 0x60	; 96
    1600:	88 b9       	out	0x08, r24	; 8
    1602:	00 c0       	rjmp	.+0      	; 0x1604 <LCD_init()+0x11a>
    1604:	00 c0       	rjmp	.+0      	; 0x1606 <LCD_init()+0x11c>
    1606:	42 98       	cbi	0x08, 2	; 8
    1608:	00 c0       	rjmp	.+0      	; 0x160a <LCD_init()+0x120>
    160a:	00 c0       	rjmp	.+0      	; 0x160c <LCD_init()+0x122>
    160c:	40 98       	cbi	0x08, 0	; 8
    160e:	41 9a       	sbi	0x08, 1	; 8
    1610:	00 c0       	rjmp	.+0      	; 0x1612 <LCD_init()+0x128>
    1612:	00 c0       	rjmp	.+0      	; 0x1614 <LCD_init()+0x12a>
    1614:	87 b1       	in	r24, 0x07	; 7
    1616:	87 78       	andi	r24, 0x87	; 135
    1618:	87 b9       	out	0x07, r24	; 7
    161a:	88 b1       	in	r24, 0x08	; 8
    161c:	87 78       	andi	r24, 0x87	; 135
    161e:	88 b9       	out	0x08, r24	; 8
    1620:	42 9a       	sbi	0x08, 2	; 8
    1622:	00 c0       	rjmp	.+0      	; 0x1624 <LCD_init()+0x13a>
    1624:	00 c0       	rjmp	.+0      	; 0x1626 <LCD_init()+0x13c>
    1626:	96 b1       	in	r25, 0x06	; 6
    1628:	86 b1       	in	r24, 0x06	; 6
    162a:	86 b1       	in	r24, 0x06	; 6
    162c:	86 b1       	in	r24, 0x06	; 6
    162e:	42 98       	cbi	0x08, 2	; 8
    1630:	00 c0       	rjmp	.+0      	; 0x1632 <LCD_init()+0x148>
    1632:	00 c0       	rjmp	.+0      	; 0x1634 <LCD_init()+0x14a>
    1634:	42 9a       	sbi	0x08, 2	; 8
    1636:	00 c0       	rjmp	.+0      	; 0x1638 <LCD_init()+0x14e>
    1638:	00 c0       	rjmp	.+0      	; 0x163a <LCD_init()+0x150>
    163a:	86 b1       	in	r24, 0x06	; 6
    163c:	86 b1       	in	r24, 0x06	; 6
    163e:	86 b1       	in	r24, 0x06	; 6
    1640:	86 b1       	in	r24, 0x06	; 6
    1642:	42 98       	cbi	0x08, 2	; 8
    1644:	00 c0       	rjmp	.+0      	; 0x1646 <LCD_init()+0x15c>
    1646:	00 c0       	rjmp	.+0      	; 0x1648 <LCD_init()+0x15e>
    1648:	87 b1       	in	r24, 0x07	; 7
    164a:	88 67       	ori	r24, 0x78	; 120
    164c:	87 b9       	out	0x07, r24	; 7
    164e:	92 95       	swap	r25
    1650:	96 95       	lsr	r25
    1652:	96 95       	lsr	r25
    1654:	93 70       	andi	r25, 0x03	; 3
    1656:	90 fd       	sbrc	r25, 0
    1658:	d9 cf       	rjmp	.-78     	; 0x160c <LCD_init()+0x122>
    165a:	40 98       	cbi	0x08, 0	; 8
    165c:	41 98       	cbi	0x08, 1	; 8
    165e:	00 c0       	rjmp	.+0      	; 0x1660 <LCD_init()+0x176>
    1660:	00 c0       	rjmp	.+0      	; 0x1662 <LCD_init()+0x178>
    1662:	42 9a       	sbi	0x08, 2	; 8
    1664:	88 b1       	in	r24, 0x08	; 8
    1666:	87 78       	andi	r24, 0x87	; 135
    1668:	88 b9       	out	0x08, r24	; 8
    166a:	00 c0       	rjmp	.+0      	; 0x166c <LCD_init()+0x182>
    166c:	00 c0       	rjmp	.+0      	; 0x166e <LCD_init()+0x184>
    166e:	42 98       	cbi	0x08, 2	; 8
    1670:	00 c0       	rjmp	.+0      	; 0x1672 <LCD_init()+0x188>
    1672:	00 c0       	rjmp	.+0      	; 0x1674 <LCD_init()+0x18a>
    1674:	42 9a       	sbi	0x08, 2	; 8
    1676:	88 b1       	in	r24, 0x08	; 8
    1678:	87 78       	andi	r24, 0x87	; 135
    167a:	80 63       	ori	r24, 0x30	; 48
    167c:	88 b9       	out	0x08, r24	; 8
    167e:	00 c0       	rjmp	.+0      	; 0x1680 <LCD_init()+0x196>
    1680:	00 c0       	rjmp	.+0      	; 0x1682 <LCD_init()+0x198>
    1682:	42 98       	cbi	0x08, 2	; 8
    1684:	00 c0       	rjmp	.+0      	; 0x1686 <LCD_init()+0x19c>
    1686:	00 c0       	rjmp	.+0      	; 0x1688 <LCD_init()+0x19e>
    1688:	40 98       	cbi	0x08, 0	; 8
    168a:	41 9a       	sbi	0x08, 1	; 8
    168c:	00 c0       	rjmp	.+0      	; 0x168e <LCD_init()+0x1a4>
    168e:	00 c0       	rjmp	.+0      	; 0x1690 <LCD_init()+0x1a6>
    1690:	87 b1       	in	r24, 0x07	; 7
    1692:	87 78       	andi	r24, 0x87	; 135
    1694:	87 b9       	out	0x07, r24	; 7
    1696:	88 b1       	in	r24, 0x08	; 8
    1698:	87 78       	andi	r24, 0x87	; 135
    169a:	88 b9       	out	0x08, r24	; 8
    169c:	42 9a       	sbi	0x08, 2	; 8
    169e:	00 c0       	rjmp	.+0      	; 0x16a0 <LCD_init()+0x1b6>
    16a0:	00 c0       	rjmp	.+0      	; 0x16a2 <LCD_init()+0x1b8>
    16a2:	96 b1       	in	r25, 0x06	; 6
    16a4:	86 b1       	in	r24, 0x06	; 6
    16a6:	86 b1       	in	r24, 0x06	; 6
    16a8:	86 b1       	in	r24, 0x06	; 6
    16aa:	42 98       	cbi	0x08, 2	; 8
    16ac:	00 c0       	rjmp	.+0      	; 0x16ae <LCD_init()+0x1c4>
    16ae:	00 c0       	rjmp	.+0      	; 0x16b0 <LCD_init()+0x1c6>
    16b0:	42 9a       	sbi	0x08, 2	; 8
    16b2:	00 c0       	rjmp	.+0      	; 0x16b4 <LCD_init()+0x1ca>
    16b4:	00 c0       	rjmp	.+0      	; 0x16b6 <LCD_init()+0x1cc>
    16b6:	86 b1       	in	r24, 0x06	; 6
    16b8:	86 b1       	in	r24, 0x06	; 6
    16ba:	86 b1       	in	r24, 0x06	; 6
    16bc:	86 b1       	in	r24, 0x06	; 6
    16be:	42 98       	cbi	0x08, 2	; 8
    16c0:	00 c0       	rjmp	.+0      	; 0x16c2 <LCD_init()+0x1d8>
    16c2:	00 c0       	rjmp	.+0      	; 0x16c4 <LCD_init()+0x1da>
    16c4:	87 b1       	in	r24, 0x07	; 7
    16c6:	88 67       	ori	r24, 0x78	; 120
    16c8:	87 b9       	out	0x07, r24	; 7
    16ca:	92 95       	swap	r25
    16cc:	96 95       	lsr	r25
    16ce:	96 95       	lsr	r25
    16d0:	93 70       	andi	r25, 0x03	; 3
    16d2:	90 fd       	sbrc	r25, 0
    16d4:	d9 cf       	rjmp	.-78     	; 0x1688 <LCD_init()+0x19e>
    16d6:	40 98       	cbi	0x08, 0	; 8
    16d8:	41 98       	cbi	0x08, 1	; 8
    16da:	00 c0       	rjmp	.+0      	; 0x16dc <LCD_init()+0x1f2>
    16dc:	00 c0       	rjmp	.+0      	; 0x16de <LCD_init()+0x1f4>
    16de:	42 9a       	sbi	0x08, 2	; 8
    16e0:	88 b1       	in	r24, 0x08	; 8
    16e2:	87 78       	andi	r24, 0x87	; 135
    16e4:	88 b9       	out	0x08, r24	; 8
    16e6:	00 c0       	rjmp	.+0      	; 0x16e8 <LCD_init()+0x1fe>
    16e8:	00 c0       	rjmp	.+0      	; 0x16ea <LCD_init()+0x200>
    16ea:	42 98       	cbi	0x08, 2	; 8
    16ec:	00 c0       	rjmp	.+0      	; 0x16ee <LCD_init()+0x204>
    16ee:	00 c0       	rjmp	.+0      	; 0x16f0 <LCD_init()+0x206>
    16f0:	42 9a       	sbi	0x08, 2	; 8
    16f2:	88 b1       	in	r24, 0x08	; 8
    16f4:	87 78       	andi	r24, 0x87	; 135
    16f6:	88 60       	ori	r24, 0x08	; 8
    16f8:	88 b9       	out	0x08, r24	; 8
    16fa:	00 c0       	rjmp	.+0      	; 0x16fc <LCD_init()+0x212>
    16fc:	00 c0       	rjmp	.+0      	; 0x16fe <LCD_init()+0x214>
    16fe:	42 98       	cbi	0x08, 2	; 8
    1700:	00 c0       	rjmp	.+0      	; 0x1702 <LCD_init()+0x218>
    1702:	00 c0       	rjmp	.+0      	; 0x1704 <LCD_init()+0x21a>
    1704:	08 95       	ret

00001706 <USART0_init()>:
    1706:	10 92 c5 00 	sts	0x00C5, r1
    170a:	87 e6       	ldi	r24, 0x67	; 103
    170c:	80 93 c4 00 	sts	0x00C4, r24
    1710:	88 e1       	ldi	r24, 0x18	; 24
    1712:	80 93 c1 00 	sts	0x00C1, r24
    1716:	86 e0       	ldi	r24, 0x06	; 6
    1718:	80 93 c2 00 	sts	0x00C2, r24
    171c:	08 95       	ret

0000171e <USART0_transmit(char)>:
    171e:	98 2f       	mov	r25, r24
    1720:	80 91 c0 00 	lds	r24, 0x00C0
    1724:	85 ff       	sbrs	r24, 5
    1726:	fc cf       	rjmp	.-8      	; 0x1720 <USART0_transmit(char)+0x2>
    1728:	90 93 c6 00 	sts	0x00C6, r25
    172c:	08 95       	ret

0000172e <USART0_receive()>:
    172e:	80 91 c0 00 	lds	r24, 0x00C0
    1732:	87 ff       	sbrs	r24, 7
    1734:	fc cf       	rjmp	.-8      	; 0x172e <USART0_receive()>
    1736:	80 91 c6 00 	lds	r24, 0x00C6
    173a:	08 95       	ret

0000173c <USART0_print(char const*)>:
    173c:	fc 01       	movw	r30, r24
    173e:	90 81       	ld	r25, Z
    1740:	99 23       	and	r25, r25
    1742:	51 f0       	breq	.+20     	; 0x1758 <USART0_print(char const*)+0x1c>
    1744:	31 96       	adiw	r30, 0x01	; 1
    1746:	80 91 c0 00 	lds	r24, 0x00C0
    174a:	85 ff       	sbrs	r24, 5
    174c:	fc cf       	rjmp	.-8      	; 0x1746 <USART0_print(char const*)+0xa>
    174e:	90 93 c6 00 	sts	0x00C6, r25
    1752:	90 81       	ld	r25, Z
    1754:	99 23       	and	r25, r25
    1756:	b1 f7       	brne	.-20     	; 0x1744 <USART0_print(char const*)+0x8>
    1758:	08 95       	ret

0000175a <USART0_printf(char, __file*)>:
    175a:	98 2f       	mov	r25, r24
    175c:	80 91 c0 00 	lds	r24, 0x00C0
    1760:	85 ff       	sbrs	r24, 5
    1762:	fc cf       	rjmp	.-8      	; 0x175c <USART0_printf(char, __file*)+0x2>
    1764:	90 93 c6 00 	sts	0x00C6, r25
    1768:	80 e0       	ldi	r24, 0x00	; 0
    176a:	90 e0       	ldi	r25, 0x00	; 0
    176c:	08 95       	ret

0000176e <__mulsi3>:
    176e:	62 9f       	mul	r22, r18
    1770:	d0 01       	movw	r26, r0
    1772:	73 9f       	mul	r23, r19
    1774:	f0 01       	movw	r30, r0
    1776:	82 9f       	mul	r24, r18
    1778:	e0 0d       	add	r30, r0
    177a:	f1 1d       	adc	r31, r1
    177c:	64 9f       	mul	r22, r20
    177e:	e0 0d       	add	r30, r0
    1780:	f1 1d       	adc	r31, r1
    1782:	92 9f       	mul	r25, r18
    1784:	f0 0d       	add	r31, r0
    1786:	83 9f       	mul	r24, r19
    1788:	f0 0d       	add	r31, r0
    178a:	74 9f       	mul	r23, r20
    178c:	f0 0d       	add	r31, r0
    178e:	65 9f       	mul	r22, r21
    1790:	f0 0d       	add	r31, r0
    1792:	99 27       	eor	r25, r25
    1794:	72 9f       	mul	r23, r18
    1796:	b0 0d       	add	r27, r0
    1798:	e1 1d       	adc	r30, r1
    179a:	f9 1f       	adc	r31, r25
    179c:	63 9f       	mul	r22, r19
    179e:	b0 0d       	add	r27, r0
    17a0:	e1 1d       	adc	r30, r1
    17a2:	f9 1f       	adc	r31, r25
    17a4:	bd 01       	movw	r22, r26
    17a6:	cf 01       	movw	r24, r30
    17a8:	11 24       	eor	r1, r1
    17aa:	08 95       	ret

000017ac <__udivmodsi4>:
    17ac:	a1 e2       	ldi	r26, 0x21	; 33
    17ae:	1a 2e       	mov	r1, r26
    17b0:	aa 1b       	sub	r26, r26
    17b2:	bb 1b       	sub	r27, r27
    17b4:	fd 01       	movw	r30, r26
    17b6:	0d c0       	rjmp	.+26     	; 0x17d2 <__udivmodsi4_ep>

000017b8 <__udivmodsi4_loop>:
    17b8:	aa 1f       	adc	r26, r26
    17ba:	bb 1f       	adc	r27, r27
    17bc:	ee 1f       	adc	r30, r30
    17be:	ff 1f       	adc	r31, r31
    17c0:	a2 17       	cp	r26, r18
    17c2:	b3 07       	cpc	r27, r19
    17c4:	e4 07       	cpc	r30, r20
    17c6:	f5 07       	cpc	r31, r21
    17c8:	20 f0       	brcs	.+8      	; 0x17d2 <__udivmodsi4_ep>
    17ca:	a2 1b       	sub	r26, r18
    17cc:	b3 0b       	sbc	r27, r19
    17ce:	e4 0b       	sbc	r30, r20
    17d0:	f5 0b       	sbc	r31, r21

000017d2 <__udivmodsi4_ep>:
    17d2:	66 1f       	adc	r22, r22
    17d4:	77 1f       	adc	r23, r23
    17d6:	88 1f       	adc	r24, r24
    17d8:	99 1f       	adc	r25, r25
    17da:	1a 94       	dec	r1
    17dc:	69 f7       	brne	.-38     	; 0x17b8 <__udivmodsi4_loop>
    17de:	60 95       	com	r22
    17e0:	70 95       	com	r23
    17e2:	80 95       	com	r24
    17e4:	90 95       	com	r25
    17e6:	9b 01       	movw	r18, r22
    17e8:	ac 01       	movw	r20, r24
    17ea:	bd 01       	movw	r22, r26
    17ec:	cf 01       	movw	r24, r30
    17ee:	08 95       	ret

000017f0 <puts>:
    17f0:	0f 93       	push	r16
    17f2:	1f 93       	push	r17
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	8c 01       	movw	r16, r24
    17fa:	e0 91 2e 01 	lds	r30, 0x012E
    17fe:	f0 91 2f 01 	lds	r31, 0x012F
    1802:	83 81       	ldd	r24, Z+3	; 0x03
    1804:	81 ff       	sbrs	r24, 1
    1806:	21 c0       	rjmp	.+66     	; 0x184a <puts+0x5a>
    1808:	c0 e0       	ldi	r28, 0x00	; 0
    180a:	d0 e0       	ldi	r29, 0x00	; 0
    180c:	0d c0       	rjmp	.+26     	; 0x1828 <puts+0x38>
    180e:	e0 91 2e 01 	lds	r30, 0x012E
    1812:	f0 91 2f 01 	lds	r31, 0x012F
    1816:	20 85       	ldd	r18, Z+8	; 0x08
    1818:	31 85       	ldd	r19, Z+9	; 0x09
    181a:	bf 01       	movw	r22, r30
    181c:	f9 01       	movw	r30, r18
    181e:	09 95       	icall
    1820:	89 2b       	or	r24, r25
    1822:	11 f0       	breq	.+4      	; 0x1828 <puts+0x38>
    1824:	cf ef       	ldi	r28, 0xFF	; 255
    1826:	df ef       	ldi	r29, 0xFF	; 255
    1828:	f8 01       	movw	r30, r16
    182a:	81 91       	ld	r24, Z+
    182c:	8f 01       	movw	r16, r30
    182e:	88 23       	and	r24, r24
    1830:	71 f7       	brne	.-36     	; 0x180e <puts+0x1e>
    1832:	e0 91 2e 01 	lds	r30, 0x012E
    1836:	f0 91 2f 01 	lds	r31, 0x012F
    183a:	20 85       	ldd	r18, Z+8	; 0x08
    183c:	31 85       	ldd	r19, Z+9	; 0x09
    183e:	8a e0       	ldi	r24, 0x0A	; 10
    1840:	bf 01       	movw	r22, r30
    1842:	f9 01       	movw	r30, r18
    1844:	09 95       	icall
    1846:	89 2b       	or	r24, r25
    1848:	11 f0       	breq	.+4      	; 0x184e <puts+0x5e>
    184a:	cf ef       	ldi	r28, 0xFF	; 255
    184c:	df ef       	ldi	r29, 0xFF	; 255
    184e:	ce 01       	movw	r24, r28
    1850:	df 91       	pop	r29
    1852:	cf 91       	pop	r28
    1854:	1f 91       	pop	r17
    1856:	0f 91       	pop	r16
    1858:	08 95       	ret

0000185a <_exit>:
    185a:	f8 94       	cli

0000185c <__stop_program>:
    185c:	ff cf       	rjmp	.-2      	; 0x185c <__stop_program>
